{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationParams.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/ErrorParams.ts","src/error_details/ErrorStrings.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationParams.ts","src/information/InformationService.ts","src/information/InformationStrings.ts","src/information/index.ts","src/options/OptionsBigDialogController.ts","src/options/OptionsBigDialogData.ts","src/options/OptionsBigDialogParams.ts","src/options/OptionsBigDialogResult.ts","src/options/OptionsBigDialogService.ts","src/options/OptionsDialogController.ts","src/options/OptionsDialogData.ts","src/options/OptionsDialogParams.ts","src/options/OptionsDialogResult.ts","src/options/OptionsDialogService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":[],"mappings":"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ACrCvD,OAAO;KACF,MAAM,CAAC,kBAAkB,EAAE;IACxB,YAAY;IACZ,sBAAsB;IACtB,sBAAsB;CAAC,CAAC,CAAC;AAEjC,+BAA6B;AAC7B,iCAA+B;AAC/B,iCAA+B;AAC/B,kCAAgC;AAChC,qCAAmC;AAGnC,OAAO;KACF,MAAM,CAAC,qBAAqB,EAAE;IAC3B,YAAY;IACZ,sBAAsB;IACtB,sBAAsB;CAAC,CAAC,CAAC;AAEjC,oCAAkC;AAClC,kCAAgC;AAChC,oCAAkC;AAClC,qCAAmC;AACnC,wCAAsC;;ACxBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-dialogs.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ConfirmationParams } from './ConfirmationParams';\r\n\r\nclass ConfirmationDialogController extends  ConfirmationParams {\r\n    private _injector: ng.auto.IInjectorService;\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService) \r\n    {\r\n        \"ngInject\";\r\n\r\n        super();\r\n        this._injector = $injector;\r\n\r\n        this.initTranslate();\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n    }\r\n\r\n    private initTranslate(): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.title = pipTranslate.translate(this.title) || pipTranslate.translate('CONFIRM_TITLE');\r\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('OK');\r\n            this.cancel = pipTranslate.translate(this.cancel) || ('CANCEL');\r\n        } else {\r\n            this.title = this.title || 'Confirm';\r\n            this.ok = this.ok || 'OK';\r\n            this.cancel = this.cancel || 'Cancel';\r\n        }\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'\r\n    ])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","export class ConfirmationParams {\r\n    public ok: string = 'OK';\r\n    public title?: string; \r\n    public cancel: string = 'Cancel';\r\n    public event?: MouseEvent;\r\n}\r\n","import { ConfirmationParams } from './ConfirmationParams';\r\n\r\nexport interface IConfirmationService {\r\n    show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass ConfirmationService implements IConfirmationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: params,\r\n            bindToController: true,\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationService);","import './ConfirmationController';\r\nimport './ConfirmationService';\r\nimport './ConfirmationParams';\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector: ng.auto.IInjectorService) {\r\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n        return function (key: string) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿import './error_details';\r\nimport './information';\r\nimport './options';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\nexport * from './information';\r\nexport * from './options';\r\nexport * from './confirmation';\r\n","import { ErrorStrings } from './ErrorStrings';\r\nimport { ErrorParams } from './ErrorParams';\r\n\r\nexport class ErrorDetailsDialogController {\r\n    private _injector: ng.auto.IInjectorService;\r\n\r\n    public $mdDialog: ng.material.IDialogService;\r\n    public theme: string;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog: ng.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService,\r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        this._injector = $injector;\r\n\r\n        this.initTranslate(params);\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    private initTranslate(params: ErrorParams): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', {\r\n                'OK': 'Ok',\r\n                'CANCEL': 'Cancel',\r\n                'ERROR_DETAILS': 'Error details',\r\n                'CODE': 'Error code',\r\n                'PATH': 'Path',\r\n                'ERROR': 'Error',\r\n                'METHOD': 'Method',\r\n                'MESSAGE': 'Message',\r\n                'DISMISS': 'Dismiss'\r\n            });\r\n            pipTranslate.translations('ru', {\r\n                'OK': 'Ок',\r\n                'CANCEL': 'Отмена',\r\n                'ERROR_DETAILS': 'Детали ошибки',\r\n                'CODE': 'Код ошибки',\r\n                'PATH': 'Путь',\r\n                'ERROR': 'Ошибка',\r\n                'METHOD': 'Метод',\r\n                'MESSAGE': 'Сообщение'\r\n            });\r\n            this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\r\n            this.config.cancel = pipTranslate.translate(params.cancel) || pipTranslate.translate('CANCEL');\r\n            this.config.errorDetails = pipTranslate.translate('ERROR_DETAILS');\r\n            this.config.dismissButton = pipTranslate.translate('DISMISS');\r\n            this.config.errorMessage = pipTranslate.translate('MESSAGE');\r\n            this.config.errorCode = pipTranslate.translate('CODE');\r\n            this.config.errorMethod = pipTranslate.translate('METHOD');\r\n            this.config.errorPath = pipTranslate.translate('PATH');\r\n            this.config.errorText = pipTranslate.translate('ERROR');\r\n        } else {\r\n            this.config.ok = params.ok || 'Ok';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n    }\r\n    \r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","import { ErrorParams } from './ErrorParams';\r\n\r\nexport interface IConfirmationService {\r\n    show(params: ErrorParams, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass ErrorDetailsService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    \r\n    public show(params: ErrorParams, successCallback?: () => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params}, // todo bindToController: true,\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","export class ErrorParams {\r\n    event: MouseEvent;\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}","export class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}","angular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorParams';\r\nimport './ErrorStrings';\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","import { InformationParams } from './InformationParams';\r\nimport { InformationStrings } from './InformationStrings';\r\n\r\nexport class InformationDialogController {\r\n    private _injector: ng.auto.IInjectorService;\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService, \r\n        params: InformationParams) \r\n    {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n        this._injector = $injector;\r\n\r\n        this.initTranslate(params)\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    private initTranslate(params: InformationParams): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        let content = params.message, item;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('INFORMATION_TITLE');\r\n            this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        let pipFormat: pip.services.IFormat = this._injector.has('pipFormat') ? <pip.services.IFormat>this._injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n        }\r\n\r\n        this.config.content = content;        \r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","export class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title?: string; \r\n    public message?: string;\r\n    public error?: string;\r\n    public item: any;\r\n}","import { InformationParams } from './InformationParams';\r\n\r\nexport interface IInformationService {\r\n    show(params: InformationParams, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass InformationService implements IInformationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","export class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n","angular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationParams';\r\nimport './InformationStrings';\r\nimport './InformationService';\r\nimport './InformationController';\r\n","import { OptionsBigDialogParams } from './OptionsBigDialogParams';\r\nimport { OptionsBigDialogData } from './OptionsBigDialogData';\r\n\r\nclass OptionsBigDialogController {\r\n    private _injector: ng.auto.IInjectorService;\r\n\r\n    private $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsBigDialogParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsBigDialogParams) \r\n    {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigDialogParams();\r\n        this._injector = $injector;\r\n\r\n        this.initTranslate(params)\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        \r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigDialogData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    private initTranslate(params: OptionsBigDialogParams): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title =  pipTranslate.translate(params.title) || pipTranslate.translate('OPTIONS_TITLE');\r\n            this.config.applyButtonTitle = pipTranslate.translate(params.applyButtonTitle) || pipTranslate.translate('SELECT');\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }        \r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsBigDialogData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event: JQueryKeyEventObject, index: number) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option: OptionsBigDialogData;\r\n        option = <OptionsBigDialogData>_.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigDialogData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","export class OptionsBigDialogData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n","import { OptionsBigDialogData } from './OptionsBigDialogData';\r\n\r\nexport class OptionsBigDialogParams {\r\n    public title?: string;  \r\n    public applyButtonTitle?: string;\r\n    public options?: OptionsBigDialogData[];\r\n    public selectedOption?: OptionsBigDialogData;\r\n    public deleted?: boolean;\r\n    public selectedOptionName?: string;\r\n    public deletedTitle?: string;\r\n    public hint?: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n","import { OptionsBigDialogData } from './OptionsBigDialogData';\r\n\r\nexport class OptionsBigDialogResult {\r\n    public option: OptionsBigDialogData;\r\n    public deleted: boolean;\r\n}\r\n","import { OptionsBigDialogParams } from './OptionsBigDialogParams';\r\nimport { OptionsBigDialogResult } from './OptionsBigDialogResult';\r\n\r\nexport interface IOptionsBigDialogService {\r\n    show(params: OptionsBigDialogParams, successCallback?: (result: OptionsBigDialogResult) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsBigDialogService implements IOptionsBigDialogService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback?: (result: OptionsBigDialogResult) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((result: OptionsBigDialogResult) => {\r\n            if (successCallback) {\r\n                successCallback(result);\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigDialogService);","import { OptionsDialogData } from './OptionsDialogData';\r\nimport { OptionsDialogParams } from './OptionsDialogParams';\r\nimport { OptionsDialogResult } from './OptionsDialogResult';\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsDialogParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsDialogParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsDialogParams();\r\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('OPTIONS_TITLE');\r\n            this.config.applyButtonTitle = pipTranslate.translate(params.applyButtonTitle) || pipTranslate.translate('SELECT');\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsDialogData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsDialogData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n    }\r\n            \r\n    public onKeyPress (event: JQueryKeyEventObject) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsDialogData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nexport class OptionsDialogData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n","import { OptionsDialogData } from './OptionsDialogData';\r\n\r\nexport class OptionsDialogParams {\r\n    public event: MouseEvent;\r\n    public title?: string;  \r\n    public applyButtonTitle?: string;\r\n    public options?: OptionsDialogData[];\r\n    public selectedOption?: OptionsDialogData;\r\n    public deleted?: boolean;\r\n    public selectedOptionName?: string;\r\n    public deletedTitle?: string;\r\n}","import { OptionsDialogData } from './OptionsDialogData';\r\n\r\nexport class OptionsDialogResult {\r\n    public option: OptionsDialogData;\r\n    public deleted: boolean;\r\n}\r\n","import { OptionsDialogParams } from './OptionsDialogParams';\r\nimport { OptionsDialogResult } from './OptionsDialogResult';\r\n\r\nexport interface IOptionsDialogService {\r\n    show(params: OptionsDialogParams, successCallback?: (result: OptionsDialogResult) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsDialogService implements IOptionsDialogService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public  show(params: OptionsDialogParams, successCallback?: (result: OptionsDialogResult) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((result: OptionsDialogResult) => {\r\n            if (successCallback) {\r\n                successCallback(result);\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsDialogService);","\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsDialogData';\r\nimport './OptionsDialogParams';\r\nimport './OptionsDialogResult';\r\nimport './OptionsDialogService';\r\nimport './OptionsDialogController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsBigDialogParams';\r\nimport './OptionsBigDialogData';\r\nimport './OptionsBigDialogResult';\r\nimport './OptionsBigDialogService';\r\nimport './OptionsBigDialogController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{ ::vm.theme }}\"><div class=\"pip-header\"><h3>{{ :: vm.title }}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{ :: vm.cancel }}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ :: vm.ok }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.config.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}