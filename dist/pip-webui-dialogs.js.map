{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationDialogController.ts","src/confirmation/ConfirmationDialogParams.ts","src/confirmation/ConfirmationDialogService.ts","src/confirmation/index.ts","src/dependencies/TranslateFilter.ts","src/error_details/ErrorDetailsDialogController.ts","src/error_details/ErrorDetailsDialogParams.ts","src/error_details/ErrorDetailsDialogService.ts","src/error_details/index.ts","src/index.ts","src/information/InformationDialogController.ts","src/information/InformationDialogParams.ts","src/information/InformationDialogService.ts","src/information/index.ts","src/options/OptionsDialogController.ts","src/options/OptionsDialogData.ts","src/options/OptionsDialogParams.ts","src/options/OptionsDialogResult.ts","src/options/OptionsDialogService.ts","src/options/index.ts","src/options_big/OptionsBigDialogController.ts","src/options_big/OptionsBigDialogData.ts","src/options_big/OptionsBigDialogParams.ts","src/options_big/OptionsBigDialogResult.ts","src/options_big/OptionsBigDialogService.ts","src/options_big/index.ts","temp/pip-webui-dialogs-html.js"],"names":[],"mappings":"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":"pip-webui-dialogs.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ConfirmationDialogParams } from './ConfirmationDialogParams';\r\n\r\nclass ConfirmationDialogController extends  ConfirmationDialogParams {\r\n    private _injector: ng.auto.IInjectorService;\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService) \r\n    {\r\n        \"ngInject\";\r\n\r\n        super();\r\n        this._injector = $injector;\r\n\r\n        this.initTranslate();\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n    }\r\n\r\n    private initTranslate(): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.title = pipTranslate.translate(this.title) || pipTranslate.translate('CONFIRM_TITLE');\r\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('OK');\r\n            this.cancel = pipTranslate.translate(this.cancel) || ('CANCEL');\r\n        } else {\r\n            this.title = this.title || 'Confirm';\r\n            this.ok = this.ok || 'OK';\r\n            this.cancel = this.cancel || 'Cancel';\r\n        }\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","export class ConfirmationDialogParams {\r\n    // Mouse event\r\n    public event?: MouseEvent;\r\n    // Confirm button caption\r\n    public ok?: string;\r\n    // Dialog title\r\n    public title?: string; \r\n    // Cancel button caption\r\n    public cancel?: string;\r\n}\r\n","import { ConfirmationDialogParams } from './ConfirmationDialogParams';\r\nimport { IConfirmationDialogService } from './IConfirmationDialogService';\r\n\r\nclass ConfirmationDialogService implements IConfirmationDialogService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params: ConfirmationDialogParams, successCallback?: () => void, cancelCallback?: () => void) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: '$ctrl',\r\n            locals: params,\r\n            bindToController: true,\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationDialogService);","angular\r\n    // .module('pipConfirmationDialog', [\r\n    //     'ngMaterial', \r\n    //     'pipDialogs.Translate',\r\n    //     'pipDialogs.Templates']);\r\n\r\nimport './ConfirmationDialogParams';\r\nimport './ConfirmationDialogController';\r\nimport './IConfirmationDialogService';\r\nimport './ConfirmationDialogService';\r\n\r\n\r\nexport * from './IConfirmationDialogService';","{\r\n\r\nfunction translate($injector: ng.auto.IInjectorService) {\r\n    var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \r\n        ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n    return function (key: string) {\r\n        return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDialogs.Translate', [])\r\n    .filter('translate', translate);\r\n\r\n}","import { ErrorDetailsDialogParams } from './ErrorDetailsDialogParams';\r\n\r\nclass ErrorDialogStrings {\r\n    public errorDetails: string = 'Error details';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nclass ErrorDetailsDialogController extends ErrorDetailsDialogParams {\r\n    private _injector: ng.auto.IInjectorService;\r\n\r\n    public $mdDialog: ng.material.IDialogService;\r\n    public theme: string;\r\n    public strings: ErrorDialogStrings;\r\n\r\n    constructor(\r\n        $mdDialog: ng.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService) \r\n    {\r\n        \"ngInject\";\r\n        \r\n        super();\r\n\r\n        this.strings = new ErrorDialogStrings();\r\n        this._injector = $injector;\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n\r\n        this.initTranslate();\r\n\r\n        if (!this.error) {\r\n            this.error = '<none>';             \r\n        }\r\n    }\r\n\r\n    private initTranslate(): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', {\r\n                'OK': 'Ok',\r\n                'CANCEL': 'Cancel',\r\n                'ERROR_DETAILS': 'Error details',\r\n                'CODE': 'Error code',\r\n                'PATH': 'Path',\r\n                'ERROR': 'Error',\r\n                'METHOD': 'Method',\r\n                'MESSAGE': 'Message',\r\n                'DISMISS': 'Dismiss'\r\n            });\r\n            pipTranslate.translations('ru', {\r\n                'OK': 'Ок',\r\n                'CANCEL': 'Отмена',\r\n                'ERROR_DETAILS': 'Детали ошибки',\r\n                'CODE': 'Код ошибки',\r\n                'PATH': 'Путь',\r\n                'ERROR': 'Ошибка',\r\n                'METHOD': 'Метод',\r\n                'MESSAGE': 'Сообщение'\r\n            });\r\n            this.dismissButton = pipTranslate.translate(this.dismissButton) || pipTranslate.translate('DISMISS');\r\n\r\n            this.strings.errorDetails = pipTranslate.translate('ERROR_DETAILS');\r\n            this.strings.errorMessage = pipTranslate.translate('MESSAGE');\r\n            this.strings.errorCode = pipTranslate.translate('CODE');\r\n            this.strings.errorMethod = pipTranslate.translate('METHOD');\r\n            this.strings.errorPath = pipTranslate.translate('PATH');\r\n            this.strings.errorText = pipTranslate.translate('ERROR');\r\n        } else {\r\n            this.dismissButton = this.dismissButton || 'Dismiss';\r\n        }\r\n    }\r\n    \r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public isString(error): boolean {\r\n        return _.isString(error);\r\n    }\r\n\r\n    public getErrorText(): string {\r\n        let error: string;\r\n\r\n        if (_.isString(this.error)) { \r\n            return this.error\r\n        } \r\n        if (this.error && this.error.error) {\r\n            return this.error.error.toString();\r\n        }\r\n        if (this.error && this.error.data && this.error.data.error) {\r\n            return this.error.data.error.toString();\r\n        }\r\n        \r\n        return '<none>';\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","export class ErrorDetailsDialogParams {\r\n    // Mouse event\r\n    public event?: MouseEvent;\r\n    // Close button label\r\n    public dismissButton?: string;\r\n    // Error object or string\r\n    public error: any;\r\n}","import { ErrorDetailsDialogParams } from './ErrorDetailsDialogParams';\r\nimport { IErrorDetailsDialogService } from './IErrorDetailsDialogService';\r\n\r\nclass ErrorDetailsDialogService implements IErrorDetailsDialogService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    \r\n    public show(params: ErrorDetailsDialogParams, \r\n        successCallback?: () => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetailsDialog.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: '$ctrl',\r\n            locals: params, \r\n            bindToController: true,\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsDialogService);","// angular\r\n    // .module('pipErrorDetailsDialog', [\r\n    //     'ngMaterial', \r\n    //     'pipDialogs.Translate',\r\n    //     'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsDialogParams';\r\nimport './ErrorDetailsDialogService';\r\nimport './ErrorDetailsDialogController';\r\n\r\nexport * from './ErrorDetailsDialogParams';\r\nexport * from './IErrorDetailsDialogService';","﻿import './error_details';\r\nimport './information';\r\nimport './options';\r\nimport './options_big';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\nexport * from './information';\r\nexport * from './confirmation';\r\nexport * from './options';\r\nexport * from './options_big';\r\n","import { InformationDialogParams } from './InformationDialogParams';\r\n\r\nclass InformationDialogController extends InformationDialogParams {\r\n    private _injector: ng.auto.IInjectorService;\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public content: string;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService) \r\n    {\r\n        \"ngInject\";\r\n\r\n        super();        \r\n        this._injector = $injector;\r\n\r\n        this.initTranslate()\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n    }\r\n\r\n    private initTranslate(): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        let content: string = this.message;\r\n        let item: string;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.title = pipTranslate.translate(this.title) || pipTranslate.translate('INFORMATION_TITLE');\r\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('OK');\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.title = this.title || 'Information';\r\n            this.ok = this.ok || 'OK';\r\n        }\r\n\r\n        let pipFormat: pip.services.IFormat = this._injector.has('pipFormat') \r\n            ? <pip.services.IFormat>this._injector.get('pipFormat') : null;\r\n\r\n        if (this.item && pipFormat) {\r\n            // item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n        }\r\n\r\n        this.content = content;        \r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates'])\r\n    .controller('pipInformationDialogController', InformationDialogController);","export class InformationDialogParams {\r\n    // Mouse event\r\n    public event?: MouseEvent;\r\n    // Confirm button caption\r\n    public ok?: string;\r\n    // Dialog title\r\n    public title?: string; \r\n    // Dialog messag. You can use formatting options (%s, %d etc.). \r\n    public message: string;\r\n    // Paramentrs for message string\r\n    public item?: any;\r\n}","import { InformationDialogParams } from './InformationDialogParams';\r\nimport { IInformationDialogService } from './IInformationDialogService';\r\n\r\nclass InformationDialogService implements IInformationDialogService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: '$ctrl',\r\n            locals: params,\r\n            bindToController: true,\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationDialogService);","// angular\r\n//     .module('pipInformationDialog', [\r\n//         'ngMaterial',\r\n//         'pipDialogs.Translate', \r\n//         'pipDialogs.Templates']);\r\n\r\nimport './InformationDialogParams';\r\nimport './InformationDialogController';\r\nimport './InformationDialogService';\r\n\r\n\r\nexport * from './IInformationDialogService';\r\nexport * from './InformationDialogParams';\r\n","import { OptionsDialogData } from './OptionsDialogData';\r\nimport { OptionsDialogParams } from './OptionsDialogParams';\r\nimport { OptionsDialogResult } from './OptionsDialogResult';\r\n\r\nclass OptionsDialogController extends OptionsDialogParams {\r\n    private _injector: ng.auto.IInjectorService;\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public optionIndex: number;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService, \r\n        $rootScope: ng.IRootScopeService) \r\n    {\r\n        \"ngInject\";\r\n\r\n        super();\r\n        this.$mdDialog = $mdDialog;\r\n        this._injector = $injector;\r\n        this.theme = $rootScope['$theme'];\r\n        this.options = this.options || [];\r\n\r\n        this.initTranslate();\r\n        \r\n        this.selectedOption = _.find(this.options, {active: true}) || null;\r\n        let name: string = this.selectedOption ? this.selectedOption.name : this.selectedOptionName;\r\n        let index: number = _.findIndex(this.options, (opt: OptionsDialogData) => {\r\n            return opt.name == name;\r\n        });\r\n        this.optionIndex = index == -1 ? 0 : index;\r\n        this.selectedOption = this.options[this.optionIndex];\r\n        this.selectedOptionName = this.selectedOption.name;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    private initTranslate(): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option' });\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию' });\r\n\r\n            this.title = pipTranslate.translate(this.title) || pipTranslate.translate('OPTIONS_TITLE');\r\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('SELECT');\r\n        } else {\r\n            this.title = this.title || 'Choose Option';\r\n            this.ok = this.ok || 'Select';\r\n        }\r\n              \r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsDialogData) {\r\n        event.stopPropagation();\r\n        this.selectedOptionName = option.name;\r\n    }\r\n            \r\n    public onKeyPress (event: JQueryKeyEventObject) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsDialogData;\r\n        option = _.find(this.options, { name: this.selectedOptionName });\r\n\r\n        this.$mdDialog.hide({ option: option, isCheckboxOption: this.isCheckboxOption });\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nexport class OptionsDialogData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n","import { OptionsDialogData } from './OptionsDialogData';\r\n\r\nexport class OptionsDialogParams {\r\n    // Mouse event\r\n    public event?: MouseEvent;\r\n    // Dialog title \r\n    public title?: string;\r\n    // confirm button title\r\n    public ok?: string;\r\n    // Dialog options array\r\n    public options?: OptionsDialogData[];\r\n    // Selected option by default\r\n    public selectedOption?: OptionsDialogData;\r\n    // Selected Option Name\r\n    public selectedOptionName?: string;\r\n    // Value for checkbox option\r\n    public isCheckboxOption?: boolean;\r\n    // Checkbox caption, Checkbox visible if caption is set\r\n    public checkboxOptionCaption?: string;\r\n}\r\n","import { OptionsDialogData } from './OptionsDialogData';\r\n\r\nexport class OptionsDialogResult {\r\n    public option: OptionsDialogData;\r\n    public isCheckboxOption: boolean;\r\n}\r\n","import { OptionsDialogParams } from './OptionsDialogParams';\r\nimport { OptionsDialogResult } from './OptionsDialogResult';\r\nimport { IOptionsDialogService } from './IOptionsDialogService';\r\n\r\nclass OptionsDialogService implements IOptionsDialogService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public  show(params: OptionsDialogParams, \r\n        successCallback?: (result: OptionsDialogResult) => void, \r\n        cancelCallback?: () => void): any {\r\n        \r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: '$ctrl',\r\n            locals: params,\r\n            bindToController: true,\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((result: OptionsDialogResult) => {\r\n            if (successCallback) {\r\n                successCallback(result);\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsDialogService);","// angular\r\n    // .module('pipOptionsDialog', [\r\n    //     'ngMaterial', \r\n    //     'pipDialogs.Translate',\r\n    //     'pipDialogs.Templates']);\r\n\r\nimport './OptionsDialogData';\r\nimport './OptionsDialogParams';\r\nimport './OptionsDialogResult';\r\nimport './OptionsDialogController';\r\nimport './OptionsDialogService';\r\n\r\n\r\nexport * from './OptionsDialogData';\r\nexport * from './OptionsDialogParams';\r\nexport * from './OptionsDialogResult';\r\nexport * from './OptionsDialogService';\r\n","import { OptionsBigDialogParams } from './OptionsBigDialogParams';\r\nimport { OptionsBigDialogData } from './OptionsBigDialogData';\r\n\r\nclass OptionsBigDialogController extends OptionsBigDialogParams {\r\n    private _injector: ng.auto.IInjectorService;\r\n    private $mdDialog: angular.material.IDialogService;\r\n\r\n    public theme: string;\r\n    public optionIndex: number;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService, \r\n        $rootScope: ng.IRootScopeService) \r\n    {\r\n        \"ngInject\";\r\n\r\n        super();\r\n        this.$mdDialog = $mdDialog;\r\n        this._injector = $injector;\r\n        this.theme = $rootScope['$theme'];\r\n\r\n        this.initTranslate()\r\n\r\n        this.selectedOption = _.find(this.options, {active: true}) || null;\r\n        let name: string = this.selectedOption ? this.selectedOption.name : this.selectedOptionName;\r\n        let index: number = _.findIndex(this.options, (opt: OptionsBigDialogData) => {\r\n            return opt.name == name;\r\n        });\r\n        this.optionIndex = index == -1 ? 0 : index;\r\n        this.selectedOption = this.options[this.optionIndex];\r\n        this.selectedOptionName = this.selectedOption.name;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    private initTranslate(): void {\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = this._injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option' });\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию' });\r\n\r\n            this.title =  pipTranslate.translate(this.title) || pipTranslate.translate('OPTIONS_TITLE');\r\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('SELECT');\r\n        } else {\r\n            this.title = this.title || 'Choose Option';\r\n            this.ok = this.ok || 'Select';\r\n        }        \r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsBigDialogData) {\r\n        event.stopPropagation();\r\n        this.selectedOptionName = option.name;\r\n\r\n        if (this.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.selectedOptionName = this.options[this.optionIndex].name;\r\n\r\n        if (this.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event: JQueryKeyEventObject, index: number) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.options.length) {\r\n                this.selectedOptionName = this.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option: OptionsBigDialogData;\r\n        option = <OptionsBigDialogData>_.find(this.options, { name: this.selectedOptionName }) || new OptionsBigDialogData();\r\n        this.$mdDialog.hide({ option: option });\r\n    };\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);\r\n","export class OptionsBigDialogData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n","import { OptionsBigDialogData } from './OptionsBigDialogData';\r\n\r\nexport class OptionsBigDialogParams {\r\n    // Mouse event\r\n    public event?: MouseEvent;   \r\n    // Dialog title \r\n    public title?: string;  \r\n    // confirm button title\r\n    public ok?: string;\r\n    // Dialog options array\r\n    public options?: OptionsBigDialogData[];\r\n    // Selected option by default\r\n    public selectedOption?: OptionsBigDialogData;\r\n    // Selected Option Name\r\n    public selectedOptionName?: string;    \r\n    // Dialog hint title\r\n    public hint?: string;\r\n    // Show title\r\n    public noTitle;\r\n    // Show action button\r\n    public noActions;\r\n}\r\n\r\n","import { OptionsBigDialogData } from './OptionsBigDialogData';\r\n\r\nexport class OptionsBigDialogResult {\r\n    public option: OptionsBigDialogData;\r\n    public isCheckboxOption: boolean;\r\n}\r\n","import { OptionsBigDialogParams } from './OptionsBigDialogParams';\r\nimport { OptionsBigDialogResult } from './OptionsBigDialogResult';\r\nimport { IOptionsBigDialogService } from './IOptionsBigDialogService';\r\n\r\nclass OptionsBigDialogService implements IOptionsBigDialogService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback?: (result: OptionsBigDialogResult) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: '$ctrl',\r\n            locals: params,\r\n            bindToController: true,        \r\n            clickOutsideToClose: true\r\n         })\r\n        .then((result: OptionsBigDialogResult) => {\r\n            if (successCallback) {\r\n                successCallback(result);\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigDialogService);","// angular\r\n//     .module('pipOptionsBigDialog', [\r\n//         'ngMaterial', \r\n//         'pipDialogs.Translate',\r\n//         'pipDialogs.Templates']);\r\n\r\nimport './OptionsBigDialogParams';\r\nimport './OptionsBigDialogData';\r\nimport './OptionsBigDialogResult';\r\nimport './OptionsBigDialogController';\r\nimport './OptionsBigDialogService';\r\n\r\n\r\nexport * from './OptionsBigDialogParams';\r\nexport * from './OptionsBigDialogData';\r\nexport * from './OptionsBigDialogResult';\r\nexport * from './IOptionsBigDialogService';\r\n","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{ ::$ctrl.theme }}\">\\n' +\n    '    <div class=\"pip-header\">\\n' +\n    '        <h3>{{ :: $ctrl.title }}</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div>\\n' +\n    '            <md-button ng-click=\"$ctrl.onCancel()\">{{ :: $ctrl.cancel }}</md-button>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\">{{ :: $ctrl.ok }}</md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetailsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{ $ctrl.theme }}\">\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-header\">\\n' +\n    '            <h3>{{ ::$ctrl.strings.errorDetails | translate }}</h3>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\"\\n' +\n    '             ng-if=\"$ctrl.error.code || ($ctrl.error.data && $ctrl.error.data.code)\">\\n' +\n    '            {{ ::$ctrl.strings.errorCode | translate }}\\n' +\n    '        </div>\\n' +\n    '        <div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.code || ($ctrl.error.data && $ctrl.error.data.code)\">\\n' +\n    '            {{ $ctrl.error.code || $ctrl.error.data.code }}\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '        <div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\"\\n' +\n    '             ng-if=\"$ctrl.error.path || ($ctrl.error.data && $ctrl.error.data.path)\">\\n' +\n    '            {{ ::$ctrl.strings.errorPath | translate }}\\n' +\n    '        </div>\\n' +\n    '        <div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.path || ($ctrl.error.data && $ctrl.error.data.path)\">\\n' +\n    '            {{ $ctrl.error.path || $ctrl.error.data.path }}\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '        <div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\"\\n' +\n    '             ng-if=\"$ctrl.isString($ctrl.error) || $ctrl.error.error || ($ctrl.error.data && $ctrl.error.data.error)\">\\n' +\n    '            {{ ::$ctrl.strings.errorText | translate }}\\n' +\n    '        </div>\\n' +\n    '        <div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.error || ($ctrl.error.data && $ctrl.error.data.error)\">\\n' +\n    '            {{ $ctrl.getErrorText() }}\\n' +\n    '            <!--{{ $ctrl.error.error || $ctrl.error.data.error }}-->\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '        <div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\"\\n' +\n    '             ng-if=\"$ctrl.error.method || ($ctrl.error.data && $ctrl.error.data.method)\">\\n' +\n    '            {{ ::$ctrl.strings.errorMethod | translate }}\\n' +\n    '        </div>\\n' +\n    '        <div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.method || ($ctrl.error.data && $ctrl.error.data.method)\">\\n' +\n    '            {{ $ctrl.error.method || $ctrl.error.data.method }}\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '        <div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\"\\n' +\n    '             ng-if=\"$ctrl.error.message || ($ctrl.error.data && $ctrl.error.data.message)\">\\n' +\n    '            {{ ::$ctrl.strings.errorMessage | translate }}\\n' +\n    '        </div>\\n' +\n    '        <div class=\"layout-row layout-align-start-center text-subhead1\"\\n' +\n    '             ng-if=\"$ctrl.error.message || ($ctrl.error.data && $ctrl.error.data.message)\">\\n' +\n    '            {{ $ctrl.error.message || $ctrl.error.data.message }}\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"md-accent m0\" ng-click=\"$ctrl.onOk()\">{{ ::$ctrl.dismissButton | translate }}</md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\"\\n' +\n    '           width=\"400\" md-theme=\"{{ $ctrl.theme }}\">\\n' +\n    '    <div class=\"pip-header\">\\n' +\n    '        <h3 >{{:: $ctrl.title | translate }}</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '            {{ $ctrl.content }}\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\">{{ $ctrl.ok | translate }}</md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\"\\n' +\n    '           min-width=\"400\" md-theme=\"{{ $ctrl.theme }}\">\\n' +\n    '    <md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\">\\n' +\n    '        <div class=\"pip-header\" >\\n' +\n    '            <h3>{{ ::$ctrl.title | translate }}</h3>\\n' +\n    '            <div ng-show=\"$ctrl.checkboxOptionCaption\" class=\"header-option text-subhead1 divider-bottom\">\\n' +\n    '                <md-checkbox ng-model=\"$ctrl.isCheckboxOption\" aria-label=\"CHECKBOX\">{{ ::$ctrl.checkboxOptionCaption | translate }}</md-checkbox>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '            <md-radio-group ng-model=\"$ctrl.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\"\\n' +\n    '                            ng-keypress=\"$ctrl.onKeyPress($event)\" tabindex=\"0\">\\n' +\n    '                <div ng-repeat=\"option in $ctrl.options\" class=\"pip-list-item\" md-ink-ripple\\n' +\n    '                     ui-event=\"{ click: \\'$ctrl.onOptionSelect($event, option)\\' }\"\\n' +\n    '                     ng-class=\"{ selected: option.name == $ctrl.selectedOptionName }\">\\n' +\n    '                    <div class=\"pip-list-item item-padding\">\\n' +\n    '                        <md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{ option.icon }}\" ng-if=\"option.icon\">\\n' +\n    '                        </md-icon>\\n' +\n    '                        <div class=\"pip-option-title\">\\n' +\n    '                            {{ ::option.title | translate }}\\n' +\n    '                        </div>\\n' +\n    '                        <md-radio-button ng-value=\"option.name\" tabindex=\"-1\"\\n' +\n    '                                        \\n' +\n    '                                         aria-label=\"{{ ::option.title | translate }}\">\\n' +\n    '                        </md-radio-button>\\n' +\n    '                    </div>\\n' +\n    '\\n' +\n    '                </div>\\n' +\n    '            </md-radio-group>\\n' +\n    '        </div>\\n' +\n    '    </md-dialog-content>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"pip-cancel\" ng-click=\"$ctrl.onCancel()\">{{ ::\\'CANCEL\\' | translate }}</md-button>\\n' +\n    '            <md-button class=\"pip-submit md-accent\" ng-click=\"$ctrl.onSelect()\">{{ ::$ctrl.ok | translate }}</md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options_big/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\"\\n' +\n    '           min-width=\"400\" md-theme=\"{{ $ctrl.theme }}\">\\n' +\n    '    <md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !$ctrl.noActions}\">\\n' +\n    '        <div class=\"pip-header\" ng-class=\"{\\'header-hint\\': $ctrl.noTitle && $ctrl.hint}\">\\n' +\n    '            <h3 class=\"m0\" ng-if=\"!$ctrl.noTitle\">\\n' +\n    '                {{ ::$ctrl.title | translate }}\\n' +\n    '            </h3>\\n' +\n    '            <div ng-show=\"$ctrl.noTitle && $ctrl.hint\" \\n' +\n    '                 class=\"dialog-hint layout-row layout-align-start-center\">\\n' +\n    '                <div class=\"hint-icon-container flex-fixed\" >\\n' +\n    '                    <md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon>\\n' +\n    '                </div>\\n' +\n    '                <div>{{ ::$ctrl.hint | translate }}</div>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"content-divider\" ng-if=\"!noTitle\"></div>\\n' +\n    '        <div class=\"pip-content\">\\n' +\n    '            <div class=\"spacer8\" ng-if=\"noTitle && hint\"></div>\\n' +\n    '            <md-list class=\"pip-menu  pip-ref-list\"\\n' +\n    '                     pip-selected=\"$ctrl.optionIndex\" index=\"{{ $ctrl.optionIndex }}\"\\n' +\n    '                     pip-select=\"$ctrl.onSelected($event)\">\\n' +\n    '\\n' +\n    '                <md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\"\\n' +\n    '                              ng-class=\"{\\'selected md-focused\\' : option.name == $ctrl.selectedOptionName,\\n' +\n    '                              \\'divider-bottom\\': $index != options.length - 1}\"\\n' +\n    '                              md-ink-ripple\\n' +\n    '                              ng-keyup=\"$ctrl.onKeyUp($event, $index)\"\\n' +\n    '                              ng-repeat=\"option in $ctrl.options\" >\\n' +\n    '\\n' +\n    '                    <div class=\"pip-content  content-stretch\" ng-click=\"$ctrl.onOptionSelect($event, option)\">\\n' +\n    '                        <p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">\\n' +\n    '                            {{ ::option.title | translate }}\\n' +\n    '                        </p>\\n' +\n    '                        <div class=\"pip-subtitle spacer-right\"\\n' +\n    '                             style=\"height: inherit\"\\n' +\n    '                             ng-if=\"option.subtitle\">\\n' +\n    '                            {{ ::option.subtitle | translate }}\\n' +\n    '                        </div>\\n' +\n    '                        <div class=\"pip-subtitle spacer-right\"\\n' +\n    '                             style=\"height: inherit\" ng-if=\"option.text\"\\n' +\n    '                             ng-bind-html=\"option.text | translate\">\\n' +\n    '                        </div>\\n' +\n    '                    </div>\\n' +\n    '\\n' +\n    '                </md-list-item>\\n' +\n    '\\n' +\n    '            </md-list>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"spacer8\" ng-if=\"$ctrl.noActions\"></div>\\n' +\n    '    </md-dialog-content>\\n' +\n    '\\n' +\n    '    <div class=\"pip-footer\" ng-if=\"!$ctrl.noActions\">\\n' +\n    '        <div>\\n' +\n    '            <md-button class=\"pip-cancel\" ng-click=\"$ctrl.onCancel()\">\\n' +\n    '                {{ ::\\'CANCEL\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"pip-submit md-accent\" ng-click=\"$ctrl.onSelect()\" style=\"margin-right: -6px\">\\n' +\n    '                {{ ::$ctrl.ok | translate }}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}