{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationDialogController.ts","src/confirmation/ConfirmationDialogParams.ts","src/confirmation/ConfirmationDialogService.ts","src/confirmation/index.ts","src/dependencies/TranslateFilter.ts","src/error_details/ErrorDetailsDialogController.ts","src/error_details/ErrorDetailsDialogParams.ts","src/error_details/ErrorDetailsDialogService.ts","src/error_details/index.ts","src/index.ts","src/information/InformationDialogController.ts","src/information/InformationDialogParams.ts","src/information/InformationDialogService.ts","src/information/index.ts","src/options/OptionsDialogController.ts","src/options/OptionsDialogData.ts","src/options/OptionsDialogParams.ts","src/options/OptionsDialogResult.ts","src/options/OptionsDialogService.ts","src/options/index.ts","src/options_big/OptionsBigDialogController.ts","src/options_big/OptionsBigDialogData.ts","src/options_big/OptionsBigDialogParams.ts","src/options_big/OptionsBigDialogResult.ts","src/options_big/OptionsBigDialogService.ts","src/options_big/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-dialogs.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ConfirmationDialogParams } from './ConfirmationDialogParams';\n\nclass ConfirmationDialogController extends  ConfirmationDialogParams {\n    private _injector: ng.auto.IInjectorService;\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService,\n        $rootScope: ng.IRootScopeService) \n    {\n        \"ngInject\";\n\n        super();\n        this._injector = $injector;\n\n        this.initTranslate();\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope['$theme'];\n    }\n\n    private initTranslate(): void {\n        let pipTranslate: pip.services.ITranslateService;\n        pipTranslate = this._injector.has('pipTranslate') \n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\n\n            this.title = pipTranslate.translate(this.title) || pipTranslate.translate('CONFIRM_TITLE');\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('OK');\n            this.cancel = pipTranslate.translate(this.cancel) || ('CANCEL');\n        } else {\n            this.title = this.title || 'Confirm';\n            this.ok = this.ok || 'OK';\n            this.cancel = this.cancel || 'Cancel';\n        }\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipConfirmationDialog')\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","export class ConfirmationDialogParams {\n    // Mouse event\n    public event?: MouseEvent;\n    // Confirm button caption\n    public ok?: string;\n    // Dialog title\n    public title?: string; \n    // Cancel button caption\n    public cancel?: string;\n}\n","import { ConfirmationDialogParams } from './ConfirmationDialogParams';\nimport { IConfirmationDialogService } from './IConfirmationDialogService';\n\nclass ConfirmationDialogService implements IConfirmationDialogService {\n    private _mdDialog: angular.material.IDialogService;\n    \n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n\n    public show(params: ConfirmationDialogParams, successCallback?: () => void, cancelCallback?: () => void) {\n        this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'confirmation/ConfirmationDialog.html',\n            controller: 'pipConfirmationDialogController',\n            controllerAs: '$ctrl',\n            locals: params,\n            bindToController: true,\n            clickOutsideToClose: true\n        })\n        .then(() => {\n            if (successCallback) {\n                successCallback();\n            }\n        }, \n        () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n    \n}\n\nangular\n    .module('pipConfirmationDialog')\n    .service('pipConfirmationDialog', ConfirmationDialogService);","angular\n    .module('pipConfirmationDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './ConfirmationDialogParams';\nimport './ConfirmationDialogController';\nimport './IConfirmationDialogService';\nimport './ConfirmationDialogService';\n\nexport * from './IConfirmationDialogService';\n","{\n\nfunction translate($injector: ng.auto.IInjectorService) {\n    var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \n        ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n\n    return function (key: string) {\n        return pipTranslate  ? pipTranslate.translate(key) || key : key;\n    }\n}\n\nangular\n    .module('pipDialogs.Translate', [])\n    .filter('translate', translate);\n\n}","import { ErrorDetailsDialogParams } from './ErrorDetailsDialogParams';\n\nclass ErrorDialogStrings {\n    public errorDetails: string = 'Error details';\n    public errorMessage: string = 'Message';\n    public errorCode: string = 'Code';\n    public errorMethod: string = 'Method';\n    public errorPath: string = 'Path';\n    public errorText: string = 'Error';   \n}\n\nclass ErrorDetailsDialogController extends ErrorDetailsDialogParams {\n    private _injector: ng.auto.IInjectorService;\n\n    public $mdDialog: ng.material.IDialogService;\n    public theme: string;\n    public strings: ErrorDialogStrings;\n\n    constructor(\n        $mdDialog: ng.material.IDialogService,\n        $injector: ng.auto.IInjectorService,\n        $rootScope: ng.IRootScopeService) \n    {\n        \"ngInject\";\n        \n        super();\n\n        this.strings = new ErrorDialogStrings();\n        this._injector = $injector;\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope.$theme;\n\n        this.initTranslate();\n\n        if (!this.error) {\n            this.error = '<none>';             \n        }\n    }\n\n    private initTranslate(): void {\n        let pipTranslate: pip.services.ITranslateService;\n        pipTranslate = this._injector.has('pipTranslate') \n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.translations('en', {\n                'OK': 'Ok',\n                'CANCEL': 'Cancel',\n                'ERROR_DETAILS': 'Error details',\n                'CODE': 'Error code',\n                'PATH': 'Path',\n                'ERROR': 'Error',\n                'METHOD': 'Method',\n                'MESSAGE': 'Message',\n                'DISMISS': 'Dismiss'\n            });\n            pipTranslate.translations('ru', {\n                'OK': 'Ок',\n                'CANCEL': 'Отмена',\n                'ERROR_DETAILS': 'Детали ошибки',\n                'CODE': 'Код ошибки',\n                'PATH': 'Путь',\n                'ERROR': 'Ошибка',\n                'METHOD': 'Метод',\n                'MESSAGE': 'Сообщение'\n            });\n            this.dismissButton = pipTranslate.translate(this.dismissButton) || pipTranslate.translate('DISMISS');\n\n            this.strings.errorDetails = pipTranslate.translate('ERROR_DETAILS');\n            this.strings.errorMessage = pipTranslate.translate('MESSAGE');\n            this.strings.errorCode = pipTranslate.translate('CODE');\n            this.strings.errorMethod = pipTranslate.translate('METHOD');\n            this.strings.errorPath = pipTranslate.translate('PATH');\n            this.strings.errorText = pipTranslate.translate('ERROR');\n        } else {\n            this.dismissButton = this.dismissButton || 'Dismiss';\n        }\n    }\n    \n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public isString(error): boolean {\n        return _.isString(error);\n    }\n\n    public getErrorText(): string {\n        let error: string;\n\n        if (_.isString(this.error)) { \n            return this.error\n        } \n        if (this.error && this.error.error) {\n            return this.error.error.toString();\n        }\n        if (this.error && this.error.data && this.error.data.error) {\n            return this.error.data.error.toString();\n        }\n        \n        return '<none>';\n    }\n\n}\n\nangular\n    .module('pipErrorDetailsDialog')\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","export class ErrorDetailsDialogParams {\n    // Mouse event\n    public event?: MouseEvent;\n    // Close button label\n    public dismissButton?: string;\n    // Error object or string\n    public error: any;\n}","import { ErrorDetailsDialogParams } from './ErrorDetailsDialogParams';\nimport { IErrorDetailsDialogService } from './IErrorDetailsDialogService';\n\nclass ErrorDetailsDialogService implements IErrorDetailsDialogService {\n    public _mdDialog: angular.material.IDialogService;\n\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    \n    public show(params: ErrorDetailsDialogParams, \n        successCallback?: () => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'error_details/ErrorDetailsDialog.html',\n            controller: 'pipErrorDetailsDialogController',\n            controllerAs: '$ctrl',\n            locals: params, \n            bindToController: true,\n            clickOutsideToClose: true\n         })\n        .then(() => {\n            if (successCallback) {\n                successCallback();\n            }\n        }, \n        () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipErrorDetailsDialog')\n    .service('pipErrorDetailsDialog', ErrorDetailsDialogService);","angular\n    .module('pipErrorDetailsDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './ErrorDetailsDialogParams';\nimport './ErrorDetailsDialogService';\nimport './ErrorDetailsDialogController';\n\nexport * from './ErrorDetailsDialogParams';\nexport * from './IErrorDetailsDialogService';","﻿import './dependencies/TranslateFilter';\nimport './error_details';\nimport './information';\nimport './options';\nimport './options_big';\nimport './confirmation';\n\nangular\n    .module('pipDialogs', [\n        'pipInformationDialog',\n        'pipConfirmationDialog',\n        'pipOptionsDialog',\n        'pipOptionsBigDialog',\n        'pipErrorDetailsDialog'\n    ]);\n\nexport * from './error_details';\nexport * from './information';\nexport * from './confirmation';\nexport * from './options';\nexport * from './options_big';\n","import { InformationDialogParams } from './InformationDialogParams';\n\nclass InformationDialogController extends InformationDialogParams {\n    private _injector: ng.auto.IInjectorService;\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public content: string;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService,\n        $rootScope: ng.IRootScopeService) \n    {\n        \"ngInject\";\n\n        super();        \n        this._injector = $injector;\n\n        this.initTranslate()\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope['$theme'];\n    }\n\n    private initTranslate(): void {\n        let pipTranslate: pip.services.ITranslateService;\n        pipTranslate = this._injector.has('pipTranslate') \n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\n\n        let content: string = this.message;\n        let item: string;\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\n\n            this.title = pipTranslate.translate(this.title) || pipTranslate.translate('INFORMATION_TITLE');\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('OK');\n            content = pipTranslate.translate(content);\n        } else {\n            this.title = this.title || 'Information';\n            this.ok = this.ok || 'OK';\n        }\n\n        let pipFormat: pip.services.IFormat = this._injector.has('pipFormat') \n            ? <pip.services.IFormat>this._injector.get('pipFormat') : null;\n\n        if (this.item && pipFormat) {\n            // item = _.truncate(params.item, 25);\n            content = pipFormat.sprintf(content, item);\n        }\n\n        this.content = content;        \n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipInformationDialog')\n    .controller('pipInformationDialogController', InformationDialogController);","export class InformationDialogParams {\n    // Mouse event\n    public event?: MouseEvent;\n    // Confirm button caption\n    public ok?: string;\n    // Dialog title\n    public title?: string; \n    // Dialog messag. You can use formatting options (%s, %d etc.). \n    public message: string;\n    // Paramentrs for message string\n    public item?: any;\n}","import { InformationDialogParams } from './InformationDialogParams';\nimport { IInformationDialogService } from './IInformationDialogService';\n\nclass InformationDialogService implements IInformationDialogService {\n    private _mdDialog: angular.material.IDialogService;\n    \n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'information/InformationDialog.html',\n            controller: 'pipInformationDialogController',\n            controllerAs: '$ctrl',\n            locals: params,\n            bindToController: true,\n            clickOutsideToClose: true\n         })\n        .then(function () {\n            if (successCallback) {\n                successCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipInformationDialog')\n    .service('pipInformationDialog', InformationDialogService);","angular\n    .module('pipInformationDialog', [\n        'ngMaterial',\n        'pipDialogs.Translate', \n        'pipDialogs.Templates']);\n\nimport './InformationDialogParams';\nimport './InformationDialogController';\nimport './InformationDialogService';\n\n\nexport * from './IInformationDialogService';\nexport * from './InformationDialogParams';\n","import { OptionsDialogData } from './OptionsDialogData';\nimport { OptionsDialogParams } from './OptionsDialogParams';\nimport { OptionsDialogResult } from './OptionsDialogResult';\n\nclass OptionsDialogController extends OptionsDialogParams {\n    private _injector: ng.auto.IInjectorService;\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public optionIndex: number;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService, \n        $rootScope: ng.IRootScopeService) \n    {\n        \"ngInject\";\n\n        super();\n        this.$mdDialog = $mdDialog;\n        this._injector = $injector;\n        this.theme = $rootScope['$theme'];\n        this.options = this.options || [];\n\n        this.initTranslate();\n        \n        this.selectedOption = _.find(this.options, {active: true}) || null;\n        let name: string = this.selectedOption ? this.selectedOption.name : this.selectedOptionName;\n        let index: number = _.findIndex(this.options, (opt: OptionsDialogData) => {\n            return opt.name == name;\n        });\n        this.optionIndex = index == -1 ? 0 : index;\n        this.selectedOption = this.options[this.optionIndex];\n        this.selectedOptionName = this.selectedOption.name;\n\n        setTimeout(this.focusInput, 500);\n    }\n\n    private initTranslate(): void {\n        let pipTranslate: pip.services.ITranslateService;\n        pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option' });\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию' });\n\n            this.title = pipTranslate.translate(this.title) || pipTranslate.translate('OPTIONS_TITLE');\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('SELECT');\n        } else {\n            this.title = this.title || 'Choose Option';\n            this.ok = this.ok || 'Select';\n        }\n              \n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsDialogData) {\n        event.stopPropagation();\n        this.selectedOptionName = option.name;\n    }\n            \n    public onKeyPress (event: JQueryKeyEventObject) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSelect();\n        }\n    }\n\n    public onSelect() {\n        let option: OptionsDialogData;\n        option = _.find(this.options, { name: this.selectedOptionName });\n\n        this.$mdDialog.hide({ option: option, isCheckboxOption: this.isCheckboxOption });\n    }\n\n    private focusInput() {\n        let list;\n        list = $('.pip-options-dialog .pip-list');\n        list.focus();\n    }\n\n}\n\nangular\n    .module('pipOptionsDialog')\n    .controller('pipOptionsDialogController', OptionsDialogController);","\nexport class OptionsDialogData {\n    public icon: string = 'star';\n    public name: string;\n    public title: string;\n    public active: boolean = true; \n}\n","import { OptionsDialogData } from './OptionsDialogData';\n\nexport class OptionsDialogParams {\n    // Mouse event\n    public event?: MouseEvent;\n    // Dialog title \n    public title?: string;\n    // confirm button title\n    public ok?: string;\n    // Dialog options array\n    public options?: OptionsDialogData[];\n    // Selected option by default\n    public selectedOption?: OptionsDialogData;\n    // Selected Option Name\n    public selectedOptionName?: string;\n    // Value for checkbox option\n    public isCheckboxOption?: boolean;\n    // Checkbox caption, Checkbox visible if caption is set\n    public checkboxOptionCaption?: string;\n}\n","import { OptionsDialogData } from './OptionsDialogData';\n\nexport class OptionsDialogResult {\n    public option: OptionsDialogData;\n    public isCheckboxOption: boolean;\n}\n","import { OptionsDialogParams } from './OptionsDialogParams';\nimport { OptionsDialogResult } from './OptionsDialogResult';\nimport { IOptionsDialogService } from './IOptionsDialogService';\n\nclass OptionsDialogService implements IOptionsDialogService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public  show(params: OptionsDialogParams, \n        successCallback?: (result: OptionsDialogResult) => void, \n        cancelCallback?: () => void): any {\n        \n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'options/OptionsDialog.html',\n            controller: 'pipOptionsDialogController',\n            controllerAs: '$ctrl',\n            locals: params,\n            bindToController: true,\n            clickOutsideToClose: true\n         })\n        .then((result: OptionsDialogResult) => {\n            if (successCallback) {\n                successCallback(result);\n            }\n        }, \n        () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipOptionsDialog')\n    .service('pipOptionsDialog', OptionsDialogService);","angular\n    .module('pipOptionsDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './OptionsDialogData';\nimport './OptionsDialogParams';\nimport './OptionsDialogResult';\nimport './OptionsDialogController';\nimport './OptionsDialogService';\n\n\nexport * from './OptionsDialogData';\nexport * from './OptionsDialogParams';\nexport * from './OptionsDialogResult';\nexport * from './OptionsDialogService';\n","import { OptionsBigDialogParams } from './OptionsBigDialogParams';\nimport { OptionsBigDialogData } from './OptionsBigDialogData';\n\nclass OptionsBigDialogController extends OptionsBigDialogParams {\n    private _injector: ng.auto.IInjectorService;\n    private $mdDialog: angular.material.IDialogService;\n\n    public theme: string;\n    public optionIndex: number;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService, \n        $rootScope: ng.IRootScopeService) \n    {\n        \"ngInject\";\n\n        super();\n        this.$mdDialog = $mdDialog;\n        this._injector = $injector;\n        this.theme = $rootScope['$theme'];\n\n        this.initTranslate()\n\n        this.selectedOption = _.find(this.options, {active: true}) || null;\n        let name: string = this.selectedOption ? this.selectedOption.name : this.selectedOptionName;\n        let index: number = _.findIndex(this.options, (opt: OptionsBigDialogData) => {\n            return opt.name == name;\n        });\n        this.optionIndex = index == -1 ? 0 : index;\n        this.selectedOption = this.options[this.optionIndex];\n        this.selectedOptionName = this.selectedOption.name;\n\n        setTimeout(this.focusInput, 500);\n    }\n\n    private initTranslate(): void {\n        let pipTranslate: pip.services.ITranslateService;\n        pipTranslate = this._injector.has('pipTranslate') \n            ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option' });\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию' });\n\n            this.title =  pipTranslate.translate(this.title) || pipTranslate.translate('OPTIONS_TITLE');\n            this.ok = pipTranslate.translate(this.ok) || pipTranslate.translate('SELECT');\n        } else {\n            this.title = this.title || 'Choose Option';\n            this.ok = this.ok || 'Select';\n        }        \n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsBigDialogData) {\n        event.stopPropagation();\n        this.selectedOptionName = option.name;\n\n        if (this.noActions) {\n            this.onSelect();\n        }\n    }\n\n    public onSelected() {\n        this.selectedOptionName = this.options[this.optionIndex].name;\n\n        if (this.noActions) {\n               this.onSelect();\n        }\n    }\n\n    public onKeyUp(event: JQueryKeyEventObject, index: number) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (index !== undefined && index > -1 && index < this.options.length) {\n                this.selectedOptionName = this.options[index].name;\n                this.onSelect();\n            }\n        }\n    }\n    \n    public onSelect = function () {\n        let option: OptionsBigDialogData;\n        option = <OptionsBigDialogData>_.find(this.options, { name: this.selectedOptionName }) || new OptionsBigDialogData();\n        this.$mdDialog.hide({ option: option });\n    };\n\n    private focusInput() {\n        let list;\n        list = $('.pip-options-dialog .pip-list');\n        list.focus();\n    }\n\n}\n\nangular\n    .module('pipOptionsBigDialog')\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);\n","export class OptionsBigDialogData {\n    public name: string;\n    public title: string;\n    public subtitle: string;\n}\n","import { OptionsBigDialogData } from './OptionsBigDialogData';\n\nexport class OptionsBigDialogParams {\n    // Mouse event\n    public event?: MouseEvent;   \n    // Dialog title \n    public title?: string;  \n    // confirm button title\n    public ok?: string;\n    // Dialog options array\n    public options?: OptionsBigDialogData[];\n    // Selected option by default\n    public selectedOption?: OptionsBigDialogData;\n    // Selected Option Name\n    public selectedOptionName?: string;    \n    // Dialog hint title\n    public hint?: string;\n    // Show title\n    public noTitle;\n    // Show action button\n    public noActions;\n}\n\n","import { OptionsBigDialogData } from './OptionsBigDialogData';\n\nexport class OptionsBigDialogResult {\n    public option: OptionsBigDialogData;\n    public isCheckboxOption: boolean;\n}\n","import { OptionsBigDialogParams } from './OptionsBigDialogParams';\nimport { OptionsBigDialogResult } from './OptionsBigDialogResult';\nimport { IOptionsBigDialogService } from './IOptionsBigDialogService';\n\nclass OptionsBigDialogService implements IOptionsBigDialogService {\n    public _mdDialog: angular.material.IDialogService;\n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (result: OptionsBigDialogResult) => void, cancelCallback?: () => void): any {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'options/OptionsBigDialog.html',\n            controller: 'pipOptionsBigDialogController',\n            controllerAs: '$ctrl',\n            locals: params,\n            bindToController: true,        \n            clickOutsideToClose: true\n         })\n        .then((result: OptionsBigDialogResult) => {\n            if (successCallback) {\n                successCallback(result);\n            }\n        }, \n        () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n    \n}\n\nangular\n    .module('pipOptionsBigDialog')\n    .service('pipOptionsBigDialog', OptionsBigDialogService);","angular\n    .module('pipOptionsBigDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './OptionsBigDialogParams';\nimport './OptionsBigDialogData';\nimport './OptionsBigDialogResult';\nimport './OptionsBigDialogController';\nimport './OptionsBigDialogService';\n\n\nexport * from './OptionsBigDialogParams';\nexport * from './OptionsBigDialogData';\nexport * from './OptionsBigDialogResult';\nexport * from './IOptionsBigDialogService';\n","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{ ::$ctrl.theme }}\"><div class=\"pip-header\"><h3>{{ :: $ctrl.title }}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"$ctrl.onCancel()\">{{ :: $ctrl.cancel }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\">{{ :: $ctrl.ok }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetailsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{ $ctrl.theme }}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{ ::$ctrl.strings.errorDetails | translate }}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"$ctrl.error.code || ($ctrl.error.data && $ctrl.error.data.code)\">{{ ::$ctrl.strings.errorCode | translate }}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.code || ($ctrl.error.data && $ctrl.error.data.code)\">{{ $ctrl.error.code || $ctrl.error.data.code }}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"$ctrl.error.path || ($ctrl.error.data && $ctrl.error.data.path)\">{{ ::$ctrl.strings.errorPath | translate }}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.path || ($ctrl.error.data && $ctrl.error.data.path)\">{{ $ctrl.error.path || $ctrl.error.data.path }}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"$ctrl.isString($ctrl.error) || $ctrl.error.error || ($ctrl.error.data && $ctrl.error.data.error)\">{{ ::$ctrl.strings.errorText | translate }}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.error || ($ctrl.error.data && $ctrl.error.data.error)\">{{ $ctrl.getErrorText() }}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"$ctrl.error.method || ($ctrl.error.data && $ctrl.error.data.method)\">{{ ::$ctrl.strings.errorMethod | translate }}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.method || ($ctrl.error.data && $ctrl.error.data.method)\">{{ $ctrl.error.method || $ctrl.error.data.method }}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"$ctrl.error.message || ($ctrl.error.data && $ctrl.error.data.message)\">{{ ::$ctrl.strings.errorMessage | translate }}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"$ctrl.error.message || ($ctrl.error.data && $ctrl.error.data.message)\">{{ $ctrl.error.message || $ctrl.error.data.message }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"$ctrl.onOk()\">{{ ::$ctrl.dismissButton | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{ $ctrl.theme }}\"><div class=\"pip-header\"><h3>{{:: $ctrl.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ $ctrl.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onOk()\">{{ $ctrl.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{ $ctrl.theme }}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{ ::$ctrl.title | translate }}</h3><div ng-show=\"$ctrl.checkboxOptionCaption\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"$ctrl.isCheckboxOption\" aria-label=\"CHECKBOX\">{{ ::$ctrl.checkboxOptionCaption | translate }}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"$ctrl.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"$ctrl.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in $ctrl.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'$ctrl.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == $ctrl.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{ option.icon }}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{ ::option.title | translate }}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{ ::option.title | translate }}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"$ctrl.onCancel()\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"$ctrl.onSelect()\">{{ ::$ctrl.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options_big/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{ $ctrl.theme }}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !$ctrl.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': $ctrl.noTitle && $ctrl.hint}\"><h3 class=\"m0\" ng-if=\"!$ctrl.noTitle\">{{ ::$ctrl.title | translate }}</h3><div ng-show=\"$ctrl.noTitle && $ctrl.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{ ::$ctrl.hint | translate }}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"$ctrl.optionIndex\" index=\"{{ $ctrl.optionIndex }}\" pip-select=\"$ctrl.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == $ctrl.selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"$ctrl.onKeyUp($event, $index)\" ng-repeat=\"option in $ctrl.options\"><div class=\"pip-content content-stretch\" ng-click=\"$ctrl.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{ ::option.title | translate }}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{ ::option.subtitle | translate }}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"$ctrl.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!$ctrl.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"$ctrl.onCancel()\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"$ctrl.onSelect()\" style=\"margin-right: -6px\">{{ ::$ctrl.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}