{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams","ok","cancel","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","pipTranslate","has","get","translations","CONFIRM_TITLE","title","theme","$inject","prototype","onOk","hide","onCancel","Object","defineProperty","value","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","service","./ConfirmationService","4","thisModule","angular","filter","key","translate","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","$theme","ErrorDetailsService","then","8","./ErrorDetailsService","9","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","console","log","InformationService","clickOutsideToClose","11","./InformationService","12","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","$","focus","13","OptionsBigService","14","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","OptionsService","16","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","17","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nexport class ConfirmationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public cancel: string = 'Cancel';\r\n    public event: any;\r\n}\r\n\r\nexport class ConfirmationDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: ConfirmationParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector,\r\n        $rootScope: ng.IRootScopeService,\r\n        params: ConfirmationParams) {\r\n        \"ngInject\";\r\n        this.config = new ConfirmationParams();\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.config.title = params.title || 'CONFIRM_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'CANCEL';\r\n        } else {\r\n            this.config.title = params.title || 'Confirm';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","import { ConfirmationParams } from './ConfirmationController';\r\n\r\nexport interface IConfirmationService {\r\n    show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass ConfirmationService implements IConfirmationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params },\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationService);","'use strict';\r\n\r\nimport './ConfirmationController';\r\nimport './ConfirmationService';\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './information';\r\nimport './options';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog',\r\n        //'pipErrorDetails2Dialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\n//export * from './error_details2';\r\nexport * from './information';\r\nexport * from './options';\r\nexport * from './confirmation';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'ERROR_DETAILS': 'Error details',\r\n                    'CODE': 'Error code',\r\n                    'PATH': 'Path',\r\n                    'ERROR': 'Error',\r\n                    'METHOD': 'Method',\r\n                    'MESSAGE': 'Message',\r\n                    'DISMISS': 'Dismiss'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'ERROR_DETAILS': 'Детали ошибки',\r\n                    'CODE': 'Код ошибки',\r\n                    'PATH': 'Путь',\r\n                    'ERROR': 'Ошибка',\r\n                    'METHOD': 'Метод',\r\n                    'MESSAGE': 'Сообщение'\r\n                });\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n                this.config.errorDetails = 'ERROR_DETAILS';\r\n                this.config.dismissButton = 'DISMISS';\r\n                this.config.errorMessage = 'MESSAGE';\r\n                this.config.errorCode = 'CODE';\r\n                this.config.errorMethod = 'METHOD';\r\n                this.config.errorPath = 'PATH';\r\n                this.config.errorText = 'ERROR';                \r\n            } else {\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n            }\r\n            this.$mdDialog = $mdDialog;\r\n            this.theme = $rootScope.$theme;\r\n            this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public item;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector,\r\n        $rootScope: ng.IRootScopeService, \r\n        params: InformationParams) {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        let content = params.message, item;\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = params.title || 'INFORMATION_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        let pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n            console.log('content2', content);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","export interface IInformationService {\r\n    show(params, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass InformationService implements IInformationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsBigData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n\r\nexport class OptionsBigParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsBigData[];\r\n    public selectedOption: OptionsBigData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n    public hint: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n\r\nexport interface IOptionsBigDialogController {\r\n    onOk(): void;\r\n    onCancel(): void;\r\n    onKeyUp(event, index): void;\r\n    onOptionSelect(event, option);\r\n    onSelected(): void;\r\n    onSelect: Function;\r\n    config: OptionsBigParams;\r\n    theme: string;\r\n}\r\n\r\nexport class OptionsBigDialogController implements IOptionsBigDialogController {\r\n\r\n    private $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsBigParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsBigParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event, index) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","export interface IOptionsBigService {\r\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsBigService implements IOptionsBigService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n\r\nexport class OptionsParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsData[];\r\n    public selectedOption: OptionsData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option: OptionsData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n    }\r\n            \r\n    public onKeyPress (event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n        console.log(option);\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nexport interface IOptionsService {\r\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsService implements IOptionsService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public  show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n        \r\nimport './OptionsBigService';\r\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}