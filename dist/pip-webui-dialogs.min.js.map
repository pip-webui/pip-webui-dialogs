{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams","ok","cancel","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","pipTranslate","has","get","translations","CONFIRM_TITLE","title","theme","$inject","prototype","onOk","hide","onCancel","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","service","3","./ConfirmationService","4","thisModule","angular","filter","key","translate","5","./confirmation","./error_details","./information","./options","6","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","$theme","ErrorDetailsService","then","8","./ErrorDetailsService","9","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","console","log","10","InformationService","clickOutsideToClose","11","./InformationController","./InformationService","12","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","$","focus","OptionsBigService","14","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","OptionsService","16","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","17","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nexport class ConfirmationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public cancel: string = 'Cancel';\r\n    public event: any;\r\n}\r\n\r\nexport class ConfirmationDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: ConfirmationParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector,\r\n        $rootScope: ng.IRootScopeService,\r\n        params: ConfirmationParams) {\r\n        \"ngInject\";\r\n        this.config = new ConfirmationParams();\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.config.title = params.title || 'CONFIRM_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'CANCEL';\r\n        } else {\r\n            this.config.title = params.title || 'Confirm';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","import { ConfirmationParams } from './ConfirmationController';\r\n\r\nexport interface IConfirmationService {\r\n    show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass ConfirmationService implements IConfirmationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params },\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationService);","'use strict';\r\n\r\nimport './ConfirmationController';\r\nimport './ConfirmationService';\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './information';\r\nimport './options';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog',\r\n        //'pipErrorDetails2Dialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\n//export * from './error_details2';\r\nexport * from './information';\r\nexport * from './options';\r\nexport * from './confirmation';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'ERROR_DETAILS': 'Error details',\r\n                    'CODE': 'Error code',\r\n                    'PATH': 'Path',\r\n                    'ERROR': 'Error',\r\n                    'METHOD': 'Method',\r\n                    'MESSAGE': 'Message',\r\n                    'DISMISS': 'Dismiss'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'ERROR_DETAILS': 'Детали ошибки',\r\n                    'CODE': 'Код ошибки',\r\n                    'PATH': 'Путь',\r\n                    'ERROR': 'Ошибка',\r\n                    'METHOD': 'Метод',\r\n                    'MESSAGE': 'Сообщение'\r\n                });\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n                this.config.errorDetails = 'ERROR_DETAILS';\r\n                this.config.dismissButton = 'DISMISS';\r\n                this.config.errorMessage = 'MESSAGE';\r\n                this.config.errorCode = 'CODE';\r\n                this.config.errorMethod = 'METHOD';\r\n                this.config.errorPath = 'PATH';\r\n                this.config.errorText = 'ERROR';                \r\n            } else {\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n            }\r\n            this.$mdDialog = $mdDialog;\r\n            this.theme = $rootScope.$theme;\r\n            this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public item;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector,\r\n        $rootScope: ng.IRootScopeService, \r\n        params: InformationParams) {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        let content = params.message, item;\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = params.title || 'INFORMATION_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        let pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n            console.log('content2', content);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","export interface IInformationService {\r\n    show(params, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass InformationService implements IInformationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsBigData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n\r\nexport class OptionsBigParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsBigData[];\r\n    public selectedOption: OptionsBigData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n    public hint: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n\r\nexport interface IOptionsBigDialogController {\r\n    onOk(): void;\r\n    onCancel(): void;\r\n    onKeyUp(event, index): void;\r\n    onOptionSelect(event, option);\r\n    onSelected(): void;\r\n    onSelect: Function;\r\n    config: OptionsBigParams;\r\n    theme: string;\r\n}\r\n\r\nexport class OptionsBigDialogController implements IOptionsBigDialogController {\r\n\r\n    private $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsBigParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsBigParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event, index) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","export interface IOptionsBigService {\r\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsBigService implements IOptionsBigService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n\r\nexport class OptionsParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsData[];\r\n    public selectedOption: OptionsData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option: OptionsData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n    }\r\n            \r\n    public onKeyPress (event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n        console.log(option);\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nexport interface IOptionsService {\r\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsService implements IOptionsService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public  show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n        \r\nimport './OptionsBigService';\r\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}