<<<<<<< HEAD
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details2/ErrorDetailsController2.ts","src/error_details2/ErrorDetailsService2.ts","src/error_details2/index.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams","ok","cancel","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","pipTranslate","has","get","translations","CONFIRM_TITLE","title","theme","$theme","$inject","prototype","onOk","hide","onCancel","2","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","service","3","./ConfirmationService","4","thisModule","angular","filter","key","translate","5","./confirmation","./error_details","./error_details2","./information","./options","6","ErrorDetailsData","time","type","correlationId","source","message","trace","ErrorDetailsDialogController2","console","log","localStrings","error","ERROR_HEADER","TIME","TYPE","CORRELATION_ID","SOURCE","MESSAGE","TRACE","7","ErrorDetailsService2","then","8","./ErrorDetailsService2","9","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","errorText","ErrorParams","ErrorDetailsDialogController","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","DISMISS","10","ErrorDetailsService","clickOutsideToClose","11","./ErrorDetailsService","12","InformationStrings","InformationParams","InformationDialogController","item","content","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","InformationService","14","./InformationController","./InformationService","15","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","focus","OptionsBigService","17","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","$","OptionsService","19","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","20","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nexport class ConfirmationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public cancel: string = 'Cancel';\r\n}\r\n\r\nexport class ConfirmationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ConfirmationParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ConfirmationParams) {\r\n        \"ngInject\";\r\n        this.config = new ConfirmationParams();\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.config.title = params.title || 'CONFIRM_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'CANCEL';\r\n        } else {\r\n            this.config.title = params.title || 'Confirm';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","\r\nclass ConfirmationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params },\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationService);","'use strict';\r\n\r\nimport './ConfirmationController';\r\nimport './ConfirmationService';\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './error_details2';\r\nimport './information';\r\nimport './options';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog',\r\n        'pipErrorDetails2Dialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\nexport * from './error_details2';\r\nexport * from './information';\r\nexport * from './options';\r\nexport * from './confirmation';\r\n","'use strict';\r\n\r\nexport class ErrorDetailsData {\r\n    public time: string = 'Time';\r\n    public type: string = 'Type';\r\n    public correlationId: string = 'CorrelationId';\r\n    public source: string = 'Source';\r\n    public message: string = 'Message';\r\n    public trace: string = 'Trace'; \r\n    public event: any;\r\n}\r\n\r\nexport class ErrorDetailsDialogController2 {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public localStrings: ErrorDetailsData;\r\n    public error: ErrorDetailsData;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ErrorDetailsData) {\r\n        \"ngInject\";\r\n\r\nconsole.log(params);\r\n        this.localStrings = new ErrorDetailsData();\r\n        this.error = params;\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', {\r\n                'ERROR_HEADER': 'Error details',\r\n                'TIME': 'Time',\r\n                'TYPE': 'Type',\r\n                'CORRELATION_ID': 'CorrelationId',\r\n                'SOURCE': 'Source',\r\n                'MESSAGE': 'Message',\r\n                'TRACE': 'Trace'\r\n            });\r\n            pipTranslate.translations('ru', {\r\n                'ERROR_HEADER': 'Информация об ошибках',\r\n                'TIME': 'Время',\r\n                'TYPE': 'Тип',\r\n                'CORRELATION_ID': 'Id',\r\n                'SOURCE': 'Source',\r\n                'MESSAGE': 'Сообщение',\r\n                'TRACE': 'Trace'\r\n            });   \r\n            this.localStrings.time = 'TIME';\r\n            this.localStrings.type = 'TYPE';\r\n            this.localStrings.correlationId = 'CORRELATION_ID';\r\n            this.localStrings.source = 'SOURCE';   \r\n            this.localStrings.message = 'MESSAGE';\r\n            this.localStrings.trace = 'TRACE';      \r\n        } \r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetails2Dialog')\r\n    .controller('pipErrorDetails2DialogController', ErrorDetailsDialogController2);","import { ErrorDetailsData } from  \"./ErrorDetailsController2\";\r\n\r\nclass ErrorDetailsService2 {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params: ErrorDetailsData, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details2/ErrorDetails2.html',\r\n            controller: 'pipErrorDetails2DialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetails2Dialog')\r\n    .service('pipErrorDetails2Dialog', ErrorDetailsService2);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetails2Dialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService2';\r\nimport './ErrorDetailsController2';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'ERROR_DETAILS': 'Error details',\r\n                    'CODE': 'Error code',\r\n                    'PATH': 'Path',\r\n                    'ERROR': 'Error',\r\n                    'METHOD': 'Method',\r\n                    'MESSAGE': 'Message',\r\n                    'DISMISS': 'Dismiss'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'ERROR_DETAILS': 'Детали ошибки',\r\n                    'CODE': 'Код ошибки',\r\n                    'PATH': 'Путь',\r\n                    'ERROR': 'Ошибка',\r\n                    'METHOD': 'Метод',\r\n                    'MESSAGE': 'Сообщение'\r\n                });\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n                this.config.errorDetails = 'ERROR_DETAILS';\r\n                this.config.dismissButton = 'DISMISS';\r\n                this.config.errorMessage = 'MESSAGE';\r\n                this.config.errorCode = 'CODE';\r\n                this.config.errorMethod = 'METHOD';\r\n                this.config.errorPath = 'PATH';\r\n                this.config.errorText = 'ERROR';                \r\n            } else {\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n            }\r\n            this.$mdDialog = $mdDialog;\r\n            this.theme = $rootScope.$theme;\r\n            this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public item;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: InformationParams) {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        var content = params.message, item;\r\n\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = params.title || 'INFORMATION_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        var pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n            console.log('content2', content);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","\r\nclass InformationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsBigData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n\r\nexport class OptionsBigParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsBigData[];\r\n    public selectedOption: OptionsBigData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n    public hint: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n\r\nexport class OptionsBigDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsBigParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector, \r\n        $rootScope, \r\n        params: OptionsBigParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event, index) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","\r\nclass OptionsBigService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n\r\nexport class OptionsParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsData[];\r\n    public selectedOption: OptionsData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector, \r\n        $rootScope, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option: OptionsData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n    }\r\n            \r\n    public onKeyPress (event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n        console.log(option);\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nclass OptionsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n        \r\nimport './OptionsBigService';\r\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details2/ErrorDetails2.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog-2 layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"layout-row layout-align-row-start-center\"><h3>{{::\\'ERROR_HEADER\\' | translate}}</h3></div><div class=\"layout-row layout-align-row-start-center pip-section\"><div class=\"pip-title-section\">{{::vm.localStrings.time | translate}}</div><div class=\"pip-text-section\">{{:: vm.error.time}}</div></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}
=======
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details2/ErrorDetailsController2.ts","src/error_details2/ErrorDetailsService2.ts","src/error_details2/index.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams","ok","cancel","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","pipTranslate","has","get","translations","CONFIRM_TITLE","title","theme","$theme","$inject","prototype","onOk","hide","onCancel","2","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","service","3","./ConfirmationService","4","thisModule","angular","filter","key","translate","5","./confirmation","./error_details","./error_details2","./information","./options","6","ErrorDetailsData","ErrorDetailsStrings","time","type","correlationId","source","message","trace","ErrorDetailsDialogController2","localStrings","TIME","TYPE","CORRELATION_ID","SOURCE","MESSAGE","TRACE","ErrorDetailsService2","then","8","./ErrorDetailsService2","9","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","DISMISS","10","ErrorDetailsService","clickOutsideToClose","11","./ErrorDetailsService","12","InformationStrings","InformationParams","InformationDialogController","item","content","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","console","log","InformationService","14","./InformationController","./InformationService","15","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","focus","OptionsBigService","17","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","$","OptionsService","19","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","20","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nexport class ConfirmationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public cancel: string = 'Cancel';\r\n}\r\n\r\nexport class ConfirmationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ConfirmationParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ConfirmationParams) {\r\n        \"ngInject\";\r\n        this.config = new ConfirmationParams();\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.config.title = params.title || 'CONFIRM_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'CANCEL';\r\n        } else {\r\n            this.config.title = params.title || 'Confirm';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","\r\nclass ConfirmationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params },\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationService);","'use strict';\r\n\r\nimport './ConfirmationController';\r\nimport './ConfirmationService';\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './error_details2';\r\nimport './information';\r\nimport './options';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog',\r\n        'pipErrorDetails2Dialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\nexport * from './error_details2';\r\nexport * from './information';\r\nexport * from './options';\r\nexport * from './confirmation';\r\n","'use strict';\r\n\r\nexport class ErrorDetailsData {\r\n\r\n}\r\n\r\nexport class ErrorDetailsStrings {\r\n    public time: string = 'Time';\r\n    public type: string = 'Type';\r\n    public correlationId: string = 'CorrelationId';\r\n    public source: string = 'Source';\r\n    public message: string = 'Message';\r\n    public trace: string = 'Trace'; \r\n}\r\n\r\nexport class ErrorDetailsDialogController2 {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public localStrings: ErrorDetailsStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ErrorDetailsData) {\r\n        \"ngInject\";\r\n\r\n        this.localStrings = new ErrorDetailsStrings();\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', {\r\n                'TIME': 'Time',\r\n                'TYPE': 'Type',\r\n                'CORRELATION_ID': 'CorrelationId',\r\n                'SOURCE': 'Source',\r\n                'MESSAGE': 'Message',\r\n                'TRACE': 'Trace'\r\n            });\r\n            pipTranslate.translations('ru', {\r\n                'TIME': 'Время',\r\n                'TYPE': 'Тип',\r\n                'CORRELATION_ID': 'Id',\r\n                'SOURCE': 'Source',\r\n                'MESSAGE': 'Сообщение',\r\n                'TRACE': 'Trace'\r\n            });   \r\n            this.localStrings.time = 'TIME';\r\n            this.localStrings.type = 'TYPE';\r\n            this.localStrings.correlationId = 'CORRELATION_ID';\r\n            this.localStrings.source = 'SOURCE';   \r\n            this.localStrings.message = 'MESSAGE';\r\n            this.localStrings.trace = 'TRACE';      \r\n        } \r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetails2Dialog')\r\n    .controller('pipErrorDetails2DialogController', ErrorDetailsDialogController2);","\r\nclass ErrorDetailsService2 {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetails2Dialog')\r\n    .service('pipErrorDetails2Dialog', ErrorDetailsService2);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetails2Dialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService2';\r\nimport './ErrorDetailsController2';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'ERROR_DETAILS': 'Error details',\r\n                    'CODE': 'Error code',\r\n                    'PATH': 'Path',\r\n                    'ERROR': 'Error',\r\n                    'METHOD': 'Method',\r\n                    'MESSAGE': 'Message',\r\n                    'DISMISS': 'Dismiss'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'ERROR_DETAILS': 'Детали ошибки',\r\n                    'CODE': 'Код ошибки',\r\n                    'PATH': 'Путь',\r\n                    'ERROR': 'Ошибка',\r\n                    'METHOD': 'Метод',\r\n                    'MESSAGE': 'Сообщение'\r\n                });\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n                this.config.errorDetails = 'ERROR_DETAILS';\r\n                this.config.dismissButton = 'DISMISS';\r\n                this.config.errorMessage = 'MESSAGE';\r\n                this.config.errorCode = 'CODE';\r\n                this.config.errorMethod = 'METHOD';\r\n                this.config.errorPath = 'PATH';\r\n                this.config.errorText = 'ERROR';                \r\n            } else {\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n            }\r\n            this.$mdDialog = $mdDialog;\r\n            this.theme = $rootScope.$theme;\r\n            this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public item;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: InformationParams) {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        var content = params.message, item;\r\n\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = params.title || 'INFORMATION_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        var pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n            console.log('content2', content);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","\r\nclass InformationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsBigData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n\r\nexport class OptionsBigParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsBigData[];\r\n    public selectedOption: OptionsBigData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n    public hint: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n\r\nexport class OptionsBigDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsBigParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector, \r\n        $rootScope, \r\n        params: OptionsBigParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event, index) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","\r\nclass OptionsBigService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n\r\nexport class OptionsParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsData[];\r\n    public selectedOption: OptionsData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector, \r\n        $rootScope, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option: OptionsData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n    }\r\n            \r\n    public onKeyPress (event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n        console.log(option);\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nclass OptionsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n        \r\nimport './OptionsBigService';\r\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details2/ErrorDetails2.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog-2 layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}
>>>>>>> 55e0335220aa8e1ac73f749ecc25c6b42196d0c9
