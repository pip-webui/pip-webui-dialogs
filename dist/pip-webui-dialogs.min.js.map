{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/confirmation.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","thisModule","angular","factory","$mdDialog","show","params","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","locals","clickOutsideToClose","then","$scope","$rootScope","$injector","pipTranslate","has","get","translations","CONFIRM_TITLE","title","ok","cancel","theme","$theme","onCancel","onOk","hide","filter","key","translate","./error_details","./information","./options","4","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","config","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","$inject","prototype","5","ErrorDetailsService","_mdDialog","controllerAs","service","6","./ErrorDetailsController","./ErrorDetailsService","7","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","console","log","InformationService","9","./InformationService","10","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","$","focus","11","OptionsBigService","12","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","OptionsService","14","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","15","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * @file Confirmation dialog\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipConfirmationDialog',\r\n        ['ngMaterial', 'pipDialogs.Translate', 'pipDialogs.Templates']);\r\n\r\n    thisModule.factory('pipConfirmationDialog',\r\n        function ($mdDialog) {\r\n            return {\r\n                show: function (params, successCallback, cancelCallback) {\r\n                    $mdDialog.show({\r\n                        targetEvent: params.event,\r\n                        templateUrl: 'confirmation/confirmation.html',\r\n                        controller: 'pipConfirmationDialogController',\r\n                        locals: { params: params },\r\n                        clickOutsideToClose: true\r\n                    })\r\n                    .then(function () {\r\n                        if (successCallback) {\r\n                            successCallback();\r\n                        }\r\n                    }, function () {\r\n                        if (cancelCallback) {\r\n                            cancelCallback();\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipConfirmationDialogController',\r\n        function ($scope, $rootScope, $mdDialog, $injector, params) {\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'CONFIRM_TITLE': 'Confirm'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'CONFIRM_TITLE': 'Подтвердите'\r\n                });\r\n\r\n                $scope.title = params.title || 'CONFIRM_TITLE';\r\n                $scope.ok = params.ok || 'OK';\r\n                $scope.cancel = params.cancel || 'CANCEL';\r\n            } else {\r\n                $scope.title = params.title || 'Confirm';\r\n                $scope.ok = params.ok || 'OK';\r\n                $scope.cancel = params.cancel || 'Cancel';\r\n            }\r\n\r\n            $scope.theme = $rootScope.$theme;\r\n\r\n            $scope.onCancel = function () {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            $scope.onOk = function () {\r\n                $mdDialog.hide();\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './information';\r\nimport './options';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        //'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\nexport * from './information';\r\nexport * from './options';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        pipTranslate, \r\n        $rootScope, \r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'ERROR_DETAILS': 'Error details',\r\n                    'CODE': 'Error code',\r\n                    'PATH': 'Path',\r\n                    'ERROR': 'Error',\r\n                    'METHOD': 'Method',\r\n                    'MESSAGE': 'Message',\r\n                    'DISMISS': 'Dismiss'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'ERROR_DETAILS': 'Детали ошибки',\r\n                    'CODE': 'Код ошибки',\r\n                    'PATH': 'Путь',\r\n                    'ERROR': 'Ошибка',\r\n                    'METHOD': 'Метод',\r\n                    'MESSAGE': 'Сообщение'\r\n                });\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n                this.config.errorDetails = 'ERROR_DETAILS';\r\n                this.config.dismissButton = 'DISMISS';\r\n                this.config.errorMessage = 'MESSAGE';\r\n                this.config.errorCode = 'CODE';\r\n                this.config.errorMethod = 'METHOD';\r\n                this.config.errorPath = 'PATH';\r\n                this.config.errorText = 'ERROR';                \r\n            } else {\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n            }\r\n            this.$mdDialog = $mdDialog;\r\n            this.theme = $rootScope.$theme;\r\n            this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public item;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        pipTranslate, \r\n        $rootScope, \r\n        params: InformationParams) {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        var content = params.message, item;\r\n\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = params.title || 'INFORMATION_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        var pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n            console.log('content2', content);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","\r\nclass InformationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsBigData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n\r\nexport class OptionsBigParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsBigData[];\r\n    public selectedOption: OptionsBigData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n    public hint: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n\r\nexport class OptionsBigDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsBigParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        pipTranslate, \r\n        $rootScope, \r\n        params: OptionsBigParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event, index) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","\r\nclass OptionsBigService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n\r\nexport class OptionsParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsData[];\r\n    public selectedOption: OptionsData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        pipTranslate, \r\n        $rootScope, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option: OptionsData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n    }\r\n            \r\n    public onKeyPress (event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n        console.log(option);\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nclass OptionsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n        \r\nimport './OptionsBigService';\r\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/confirmation.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::theme}}\"><div class=\"pip-header\"><h3>{{:: title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"onCancel()\">{{:: cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"onOk()\">{{:: ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}