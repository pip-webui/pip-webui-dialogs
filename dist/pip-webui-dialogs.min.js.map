{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationParams.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams_1","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","ConfirmationParams","pipTranslate","has","get","translations","CONFIRM_TITLE","title","translate","ok","cancel","theme","$inject","prototype","onOk","hide","onCancel","Object","defineProperty","value","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","./ConfirmationParams","./ConfirmationService","5","thisModule","angular","filter","key","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","OK","CANCEL","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","$theme","ErrorDetailsService","then","service","9","./ErrorDetailsService","10","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","InformationService","clickOutsideToClose","12","./InformationService","13","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","$","focus","14","OptionsBigService","15","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","OptionsService","17","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","18","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ConfirmationParams } from './ConfirmationParams';\r\n\r\nexport class ConfirmationDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: ConfirmationParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService,\r\n        params: ConfirmationParams) \r\n    {\r\n        \"ngInject\";\r\n        this.config = new ConfirmationParams();\r\n\r\n        let pipTranslate: pip.services.ITranslateService;\r\n        pipTranslate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('CONFIRM_TITLE');\r\n            this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\r\n            this.config.cancel = pipTranslate.translate(params.cancel) || ('CANCEL');\r\n        } else {\r\n            this.config.title = params.title || 'Confirm';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'\r\n    ])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","export class ConfirmationParams {\r\n    public ok: string = 'OK';\r\n    public title?: string; \r\n    public cancel: string = 'Cancel';\r\n    public event?: MouseEvent;\r\n}\r\n","import { ConfirmationParams } from './ConfirmationParams';\r\n\r\nexport interface IConfirmationService {\r\n    show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass ConfirmationService implements IConfirmationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params },\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, \r\n        () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationService);","import './ConfirmationController';\r\nimport './ConfirmationService';\r\nimport './ConfirmationParams';","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector: ng.auto.IInjectorService) {\r\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n        return function (key: string) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './information';\r\nimport './options';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog',\r\n        //'pipErrorDetails2Dialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\n//export * from './error_details2';\r\nexport * from './information';\r\nexport * from './options';\r\nexport * from './confirmation';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n    public $mdDialog: ng.material.IDialogService;\r\n    public theme: string;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog: ng.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService, \r\n        params: ErrorParams) \r\n    {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', {\r\n                'OK': 'Ok',\r\n                'CANCEL': 'Cancel',\r\n                'ERROR_DETAILS': 'Error details',\r\n                'CODE': 'Error code',\r\n                'PATH': 'Path',\r\n                'ERROR': 'Error',\r\n                'METHOD': 'Method',\r\n                'MESSAGE': 'Message',\r\n                'DISMISS': 'Dismiss'\r\n            });\r\n            pipTranslate.translations('ru', {\r\n                'OK': 'Ок',\r\n                'CANCEL': 'Отмена',                    \r\n                'ERROR_DETAILS': 'Детали ошибки',\r\n                'CODE': 'Код ошибки',\r\n                'PATH': 'Путь',\r\n                'ERROR': 'Ошибка',\r\n                'METHOD': 'Метод',\r\n                'MESSAGE': 'Сообщение'\r\n            });\r\n            this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\r\n            this.config.cancel = pipTranslate.translate(params.cancel) || pipTranslate.translate('CANCEL');\r\n            this.config.errorDetails = pipTranslate.translate('ERROR_DETAILS');\r\n            this.config.dismissButton = pipTranslate.translate('DISMISS');\r\n            this.config.errorMessage = pipTranslate.translate('MESSAGE');\r\n            this.config.errorCode = pipTranslate.translate('CODE');\r\n            this.config.errorMethod = pipTranslate.translate('METHOD');\r\n            this.config.errorPath = pipTranslate.translate('PATH');\r\n            this.config.errorText = pipTranslate.translate('ERROR');                \r\n        } else {\r\n            this.config.ok = params.ok || 'Ok';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n        \r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title?: string; \r\n    public message?: string;\r\n    public error?: string;\r\n    public item: any;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService,\r\n        $rootScope: ng.IRootScopeService, \r\n        params: InformationParams) \r\n    {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        let content = params.message, item;\r\n\r\n        let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('INFORMATION_TITLE');\r\n            this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        let pipFormat: pip.services.IFormat = $injector.has('pipFormat') ? <pip.services.IFormat>$injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","export interface IInformationService {\r\n    show(params, successCallback?: () => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass InformationService implements IInformationService {\r\n    private _mdDialog: angular.material.IDialogService;\r\n    \r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsBigData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n\r\nexport class OptionsBigParams {\r\n    public title?: string;  \r\n    public applyButtonTitle?: string;\r\n    public options?: OptionsBigData[];\r\n    public selectedOption?: OptionsBigData;\r\n    public deleted?: boolean;\r\n    public selectedOptionName?: string;\r\n    public deletedTitle?: string;\r\n    public hint?: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n\r\nexport interface IOptionsBigDialogController {\r\n    onOk(): void;\r\n    onCancel(): void;\r\n    onKeyUp(event: JQueryKeyEventObject, index: number): void;\r\n    onOptionSelect(event: ng.IAngularEvent, option: OptionsBigData);\r\n    onSelected(): void;\r\n    onSelect: Function;\r\n    config: OptionsBigParams;\r\n    theme: string;\r\n}\r\n\r\nexport class OptionsBigDialogController implements IOptionsBigDialogController {\r\n\r\n    private $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsBigParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsBigParams) \r\n    {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigParams();\r\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title =  pipTranslate.translate(params.title) || pipTranslate.translate('OPTIONS_TITLE');\r\n            this.config.applyButtonTitle = pipTranslate.translate(params.applyButtonTitle) || pipTranslate.translate('SELECT');\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsBigData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event: JQueryKeyEventObject, index: number) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option: OptionsBigData;\r\n        option = <OptionsBigData>_.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","export interface IOptionsBigService {\r\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsBigService implements IOptionsBigService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n\r\nexport class OptionsParams {\r\n    public title?: string;  \r\n    public applyButtonTitle?: string;\r\n    public options?: OptionsData[];\r\n    public selectedOption?: OptionsData;\r\n    public deleted?: boolean;\r\n    public selectedOptionName?: string;\r\n    public deletedTitle?: string;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public theme: string;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog: angular.material.IDialogService,\r\n        $injector: ng.auto.IInjectorService, \r\n        $rootScope: ng.IRootScopeService, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('OPTIONS_TITLE');\r\n            this.config.applyButtonTitle = pipTranslate.translate(params.applyButtonTitle) || pipTranslate.translate('SELECT');\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n    }\r\n            \r\n    public onKeyPress (event: JQueryKeyEventObject) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nexport interface IOptionsService {\r\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass OptionsService implements IOptionsService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public  show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n        \r\nimport './OptionsBigService';\r\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.config.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}