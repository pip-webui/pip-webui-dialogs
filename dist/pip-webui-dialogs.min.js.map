{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams","ok","cancel","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","pipTranslate","has","get","translations","CONFIRM_TITLE","title","theme","$theme","$inject","prototype","onOk","hide","onCancel","2","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","service","3","./ConfirmationService","4","thisModule","angular","filter","key","translate","5","./confirmation","./error_details","./information","./options","6","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","ErrorDetailsService","then","8","./ErrorDetailsService","9","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","console","log","10","InformationService","clickOutsideToClose","11","./InformationController","./InformationService","12","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","$","focus","OptionsBigService","14","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","OptionsService","16","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","17","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nexport class ConfirmationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public cancel: string = 'Cancel';\r\n}\r\n\r\nexport class ConfirmationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ConfirmationParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ConfirmationParams) {\r\n        \"ngInject\";\r\n        this.config = new ConfirmationParams();\r\n\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\r\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\r\n\r\n            this.config.title = params.title || 'CONFIRM_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'CANCEL';\r\n        } else {\r\n            this.config.title = params.title || 'Confirm';\r\n            this.config.ok = params.ok || 'OK';\r\n            this.config.cancel = params.cancel || 'Cancel';\r\n        }\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates'])\r\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","\r\nclass ConfirmationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n        this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'confirmation/ConfirmationDialog.html',\r\n            controller: 'pipConfirmationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params },\r\n            clickOutsideToClose: true\r\n        })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipConfirmationDialog')\r\n    .service('pipConfirmationDialog', ConfirmationService);","'use strict';\r\n\r\nimport './ConfirmationController';\r\nimport './ConfirmationService';\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './information';\r\nimport './options';\r\nimport './confirmation';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog',\r\n        //'pipErrorDetails2Dialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\n//export * from './error_details2';\r\nexport * from './information';\r\nexport * from './options';\r\nexport * from './confirmation';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'ERROR_DETAILS': 'Error details',\r\n                    'CODE': 'Error code',\r\n                    'PATH': 'Path',\r\n                    'ERROR': 'Error',\r\n                    'METHOD': 'Method',\r\n                    'MESSAGE': 'Message',\r\n                    'DISMISS': 'Dismiss'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'ERROR_DETAILS': 'Детали ошибки',\r\n                    'CODE': 'Код ошибки',\r\n                    'PATH': 'Путь',\r\n                    'ERROR': 'Ошибка',\r\n                    'METHOD': 'Метод',\r\n                    'MESSAGE': 'Сообщение'\r\n                });\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n                this.config.errorDetails = 'ERROR_DETAILS';\r\n                this.config.dismissButton = 'DISMISS';\r\n                this.config.errorMessage = 'MESSAGE';\r\n                this.config.errorCode = 'CODE';\r\n                this.config.errorMethod = 'METHOD';\r\n                this.config.errorPath = 'PATH';\r\n                this.config.errorText = 'ERROR';                \r\n            } else {\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n            }\r\n            this.$mdDialog = $mdDialog;\r\n            this.theme = $rootScope.$theme;\r\n            this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public item;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        $rootScope, \r\n        params: InformationParams) {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        var content = params.message, item;\r\n\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = params.title || 'INFORMATION_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        var pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n            console.log('content2', content);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","\r\nclass InformationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsBigData {\r\n    public name: string;\r\n    public title: string;\r\n    public subtitle: string;\r\n}\r\n\r\nexport class OptionsBigParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsBigData[];\r\n    public selectedOption: OptionsBigData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n    public hint: string;\r\n    public noTitle: boolean = false;\r\n    public noActions: boolean = false;\r\n    public optionIndex: number = 0;\r\n}\r\n\r\nexport class OptionsBigDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsBigParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector, \r\n        $rootScope, \r\n        params: OptionsBigParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsBigParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n        this.config.noActions = params.noActions || false;\r\n        this.config.noTitle = params.noTitle || false;\r\n        this.config.hint = params.hint || '';\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n        if (this.config.noActions) {\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelected() {\r\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\r\n\r\n        if (this.config.noActions) {\r\n               this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onKeyUp(event, index) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\r\n                this.config.selectedOptionName = this.config.options[index].name;\r\n                this.onSelect();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onSelect = function () {\r\n        let option;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    };\r\n\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","\r\nclass OptionsBigService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsBigDialog.html',\r\n            controller: 'pipOptionsBigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsBigDialog')\r\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsData {\r\n    public icon: string = 'star';\r\n    public name: string;\r\n    public title: string;\r\n    public active: boolean = true; \r\n}\r\n\r\nexport class OptionsParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options: OptionsData[];\r\n    public selectedOption: OptionsData;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle: string;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector, \r\n        $rootScope, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option: OptionsData) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n    }\r\n            \r\n    public onKeyPress (event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option: OptionsData;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n        console.log(option);\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nclass OptionsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n\r\n\r\nangular\r\n    .module('pipOptionsBigDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n        \r\nimport './OptionsBigService';\r\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}