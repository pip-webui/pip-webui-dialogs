{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams","ok","cancel","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","pipTranslate","has","get","translations","CONFIRM_TITLE","title","theme","$inject","prototype","onOk","hide","onCancel","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","3","./ConfirmationService","4","thisModule","angular","filter","key","translate","5","./confirmation","./error_details","./information","./options","6","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","$theme","ErrorDetailsService","then","service","8","./ErrorDetailsService","9","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","console","log","10","InformationService","clickOutsideToClose","11","./InformationController","./InformationService","12","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","$","focus","OptionsBigService","14","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","OptionsService","16","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","17","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nexport class ConfirmationParams {\n    public ok: string = 'OK';\n    public title: string; \n    public cancel: string = 'Cancel';\n    public event: any;\n}\n\nexport class ConfirmationDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: ConfirmationParams;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector,\n        $rootScope: ng.IRootScopeService,\n        params: ConfirmationParams) {\n        \"ngInject\";\n        this.config = new ConfirmationParams();\n\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\n\n            this.config.title = params.title || 'CONFIRM_TITLE';\n            this.config.ok = params.ok || 'OK';\n            this.config.cancel = params.cancel || 'CANCEL';\n        } else {\n            this.config.title = params.title || 'Confirm';\n            this.config.ok = params.ok || 'OK';\n            this.config.cancel = params.cancel || 'Cancel';\n        }\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope['$theme'];\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipConfirmationDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates'])\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","import { ConfirmationParams } from './ConfirmationController';\n\nexport interface IConfirmationService {\n    show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void): any;\n}\n\nclass ConfirmationService implements IConfirmationService {\n    private _mdDialog: angular.material.IDialogService;\n    \n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void) {\n        this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'confirmation/ConfirmationDialog.html',\n            controller: 'pipConfirmationDialogController',\n            controllerAs: 'vm',\n            locals: { params: params },\n            clickOutsideToClose: true\n        })\n        .then(() => {\n            if (successCallback) {\n                successCallback();\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n    \n}\n\nangular\n    .module('pipConfirmationDialog')\n    .service('pipConfirmationDialog', ConfirmationService);","'use strict';\n\nimport './ConfirmationController';\nimport './ConfirmationService';\n","/**\n * @file Optional filter to translate string resources\n * @copyright Digital Living Software Corp. 2014-2016\n */\n \n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipDialogs.Translate', []);\n\n    thisModule.filter('translate', function ($injector) {\n        var pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    });\n\n})();\n","﻿/**\n * @file Registration of dialogs\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n'use strict';\n\nimport './error_details';\nimport './information';\nimport './options';\nimport './confirmation';\n\nangular\n    .module('pipDialogs', [\n        'pipInformationDialog',\n        'pipConfirmationDialog',\n        'pipOptionsDialog',\n        'pipOptionsBigDialog',\n        'pipErrorDetailsDialog',\n        //'pipErrorDetails2Dialog'\n    ]);\n\nexport * from './error_details';\n//export * from './error_details2';\nexport * from './information';\nexport * from './options';\nexport * from './confirmation';\n","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class ErrorStrings {\n    public ok: string = 'OK';\n    public cancel: string = 'Cancel';\n    public errorDetails: string = 'Error details';\n    public dismissButton: string = 'Dismiss';\n    public errorMessage: string = 'Message';\n    public errorCode: string = 'Code';\n    public errorMethod: string = 'Method';\n    public errorPath: string = 'Path';\n    public error: string = 'Error';\n    public errorText: string = 'Error';   \n}\n\nexport class ErrorParams {\n    public ok: string = 'OK';\n    public cancel: string = 'CANCEL';\n    public error: string = 'ERROR';\n}\n\nexport class ErrorDetailsDialogController {\n\n    public $mdDialog;\n    public theme;\n    public config: ErrorStrings;\n\n    constructor(\n        $mdDialog,\n        $injector,\n        $rootScope, \n        params: ErrorParams) {\n        \"ngInject\";\n        this.config = new ErrorStrings();\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n            if (pipTranslate) {\n                pipTranslate.translations('en', {\n                    'ERROR_DETAILS': 'Error details',\n                    'CODE': 'Error code',\n                    'PATH': 'Path',\n                    'ERROR': 'Error',\n                    'METHOD': 'Method',\n                    'MESSAGE': 'Message',\n                    'DISMISS': 'Dismiss'\n                });\n                pipTranslate.translations('ru', {\n                    'ERROR_DETAILS': 'Детали ошибки',\n                    'CODE': 'Код ошибки',\n                    'PATH': 'Путь',\n                    'ERROR': 'Ошибка',\n                    'METHOD': 'Метод',\n                    'MESSAGE': 'Сообщение'\n                });\n                this.config.ok = params.ok;\n                this.config.cancel = params.cancel;\n                this.config.errorDetails = 'ERROR_DETAILS';\n                this.config.dismissButton = 'DISMISS';\n                this.config.errorMessage = 'MESSAGE';\n                this.config.errorCode = 'CODE';\n                this.config.errorMethod = 'METHOD';\n                this.config.errorPath = 'PATH';\n                this.config.errorText = 'ERROR';                \n            } else {\n                this.config.ok = params.ok;\n                this.config.cancel = params.cancel;\n            }\n            this.$mdDialog = $mdDialog;\n            this.theme = $rootScope.$theme;\n            this.config.error = params.error;\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipErrorDetailsDialog')\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\nclass ErrorDetailsService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback, cancelCallback) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'error_details/ErrorDetails.html',\n            controller: 'pipErrorDetailsDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then(() => {\n            if (successCallback) {\n                successCallback();\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipErrorDetailsDialog')\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\n\nangular\n    .module('pipErrorDetailsDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './ErrorDetailsService';\nimport './ErrorDetailsController';\n","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class InformationStrings {\n    public ok: string = 'OK';\n    public title: string; \n    public message: string;\n    public error: string;\n    public content;\n}\n\nexport class InformationParams {\n    public ok: string = 'OK';\n    public title: string; \n    public message: string;\n    public error: string;\n    public item;\n}\n\nexport class InformationDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: InformationStrings;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector,\n        $rootScope: ng.IRootScopeService, \n        params: InformationParams) {\n        \"ngInject\";\n        this.config = new InformationStrings();\n\n        let content = params.message, item;\n\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\n\n            this.config.title = params.title || 'INFORMATION_TITLE';\n            this.config.ok = params.ok || 'OK';\n            content = pipTranslate.translate(content);\n        } else {\n            this.config.title = params.title || 'Information';\n            this.config.ok = params.ok || 'OK';\n        }\n\n        let pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\n\n        if (params.item && pipFormat) {\n            item = _.truncate(params.item, 25);\n            content = pipFormat.sprintf(content, item);\n            console.log('content2', content);\n        }\n        this.config.content = content;\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope['$theme'];\n        this.config.error = params.error;\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipInformationDialog')\n    .controller('pipInformationDialogController', InformationDialogController);","export interface IInformationService {\n    show(params, successCallback?: () => void, cancelCallback?: () => void): any;\n}\n\nclass InformationService implements IInformationService {\n    private _mdDialog: angular.material.IDialogService;\n    \n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'information/InformationDialog.html',\n            controller: 'pipInformationDialogController',\n            controllerAs: 'vm',\n            locals: { params: params},\n            clickOutsideToClose: true\n         })\n        .then(function () {\n            if (successCallback) {\n                successCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipInformationDialog')\n    .service('pipInformationDialog', InformationService);","'use strict';\n\nangular\n    .module('pipInformationDialog', [\n        'ngMaterial',\n        'pipDialogs.Translate', \n        'pipDialogs.Templates']);\n\nimport './InformationService';\nimport './InformationController';\n","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class OptionsBigData {\n    public name: string;\n    public title: string;\n    public subtitle: string;\n}\n\nexport class OptionsBigParams {\n    public title: string;  \n    public applyButtonTitle: string;\n    public options: OptionsBigData[];\n    public selectedOption: OptionsBigData;\n    public deleted;\n    public selectedOptionName: string;\n    public deletedTitle: string;\n    public hint: string;\n    public noTitle: boolean = false;\n    public noActions: boolean = false;\n    public optionIndex: number = 0;\n}\n\nexport interface IOptionsBigDialogController {\n    onOk(): void;\n    onCancel(): void;\n    onKeyUp(event, index): void;\n    onOptionSelect(event, option);\n    onSelected(): void;\n    onSelect: Function;\n    config: OptionsBigParams;\n    theme: string;\n}\n\nexport class OptionsBigDialogController implements IOptionsBigDialogController {\n\n    private $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: OptionsBigParams;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector, \n        $rootScope: ng.IRootScopeService, \n        params: OptionsBigParams) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.config = new OptionsBigParams();\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\n\n            this.config.title = params.title || 'OPTIONS_TITLE';\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\n        } else {\n            this.config.title = params.title || 'Choose Option';\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\n        }\n\n        this.theme = $rootScope['$theme'];\n        this.config.options = params.options;\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\n        this.config.selectedOptionName = this.config.selectedOption.name;\n        this.config.deleted = params.deleted;\n        this.config.deletedTitle = params.deletedTitle;\n        this.config.noActions = params.noActions || false;\n        this.config.noTitle = params.noTitle || false;\n        this.config.hint = params.hint || '';\n\n        setTimeout(this.focusInput, 500);\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n    public onOptionSelect(event, option) {\n        event.stopPropagation();\n        this.config.selectedOptionName = option.name;\n\n        if (this.config.noActions) {\n            this.onSelect();\n        }\n    }\n\n    public onSelected() {\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\n\n        if (this.config.noActions) {\n               this.onSelect();\n        }\n    }\n\n    public onKeyUp(event, index) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\n                this.config.selectedOptionName = this.config.options[index].name;\n                this.onSelect();\n            }\n        }\n    }\n    \n    public onSelect = function () {\n        let option;\n        option = _.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\n    };\n\n\n    private focusInput() {\n        let list;\n        list = $('.pip-options-dialog .pip-list');\n        list.focus();\n    }\n\n}\n\nangular\n    .module('pipOptionsBigDialog')\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","export interface IOptionsBigService {\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\n}\n\nclass OptionsBigService implements IOptionsBigService {\n    public _mdDialog: angular.material.IDialogService;\n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'options/OptionsBigDialog.html',\n            controller: 'pipOptionsBigDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((option) => {\n            if (successCallback) {\n                successCallback(option);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n    \n}\n\nangular\n    .module('pipOptionsBigDialog')\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class OptionsData {\n    public icon: string = 'star';\n    public name: string;\n    public title: string;\n    public active: boolean = true; \n}\n\nexport class OptionsParams {\n    public title: string;  \n    public applyButtonTitle: string;\n    public options: OptionsData[];\n    public selectedOption: OptionsData;\n    public deleted;\n    public selectedOptionName: string;\n    public deletedTitle: string;\n}\n\nexport class OptionsDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: OptionsParams;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector, \n        $rootScope: ng.IRootScopeService, \n        params: OptionsParams) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.config = new OptionsParams();\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\n\n            this.config.title = params.title || 'OPTIONS_TITLE';\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\n        } else {\n            this.config.title = params.title || 'Choose Option';\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\n        }\n\n        this.theme = $rootScope['$theme'];\n        this.config.options = params.options;\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\n        this.config.selectedOptionName = this.config.selectedOption.name;\n        this.config.deleted = params.deleted;\n        this.config.deletedTitle = params.deletedTitle;\n\n        setTimeout(this.focusInput, 500);\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n    public onOptionSelect(event, option: OptionsData) {\n        event.stopPropagation();\n        this.config.selectedOptionName = option.name;\n\n    }\n            \n    public onKeyPress (event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSelect();\n        }\n    }\n\n    public onSelect() {\n        let option: OptionsData;\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\n        console.log(option);\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\n    }\n\n    private focusInput() {\n        let list;\n        list = $('.pip-options-dialog .pip-list');\n        list.focus();\n    }\n\n}\n\nangular\n    .module('pipOptionsDialog')\n    .controller('pipOptionsDialogController', OptionsDialogController);","\nexport interface IOptionsService {\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\n}\n\nclass OptionsService implements IOptionsService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public  show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'options/OptionsDialog.html',\n            controller: 'pipOptionsDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((option) => {\n            if (successCallback) {\n                successCallback(option.option);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipOptionsDialog')\n    .service('pipOptionsDialog', OptionsService);","'use strict';\n\nangular\n    .module('pipOptionsDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './OptionsService';\nimport './OptionsController';\n\n\nangular\n    .module('pipOptionsBigDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n        \nimport './OptionsBigService';\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}