{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/confirmation.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","src/options/options_big.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","thisModule","angular","factory","$mdDialog","show","params","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","locals","clickOutsideToClose","then","$scope","$rootScope","$injector","pipTranslate","has","get","translations","CONFIRM_TITLE","title","ok","cancel","theme","$theme","onCancel","onOk","hide","filter","key","translate","./error_details","./information","./options","4","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","config","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","$inject","prototype","5","ErrorDetailsService","_mdDialog","controllerAs","service","6","./ErrorDetailsController","./ErrorDetailsService","7","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","console","log","InformationService","9","./InformationService","10","OptionsParams","OptionsDialogController","OPTIONS_TITLE","applyButtonTitle","options","selectedOption","find","active","selectedOptionName","name","deleted","deletedTitle","setTimeout","focusInput","onOptionSelect","option","stopPropagation","onKeyPress","keyCode","preventDefault","onSelect","list","$","focus","11","OptionsService","12","./OptionsService","13","focusToggleControl","currentTarget","noActions","noTitle","hint","optionIndex","findIndex","onSelected","index","undefined","15","run","$templateCache","put"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,MAAAL,EAAAK,SAAAC,QAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAlB,EAAAD,ICKA,WACI,YAEA,IAAI2B,GAAaC,QAAQ3B,OAAO,yBAC3B,aAAc,uBAAwB,wBAE3C0B,GAAWE,QAAQ,yBACf,YAAU,SAASC,GACf,OACIC,KAAM,SAAUC,EAAQC,EAAiBC,GACrCJ,EAAUC,MACNI,YAAaH,EAAOI,MACpBC,YAAa,iCACbC,WAAY,kCACZC,QAAUP,OAAQA,GAClBQ,qBAAqB,IAExBC,KAAK,WACER,GACAA,KAEL,WACKC,GACAA,WAQxBP,EAAWW,WAAW,mCAClB,SAAU,aAAQ,YAAY,YAAoB,SAAQ,SAAAI,EAAAC,EAAAb,EAAAc,EAAAZ,GACtD,GAAIa,GAAeD,EAAUE,IAAI,gBAAkBF,EAAUG,IAAI,gBAAkB,IAE/EF,IACAA,EAAaG,aAAa,MACtBC,cAAiB,YAErBJ,EAAaG,aAAa,MACtBC,cAAiB,gBAGrBP,EAAOQ,MAAQlB,EAAOkB,OAAS,gBAC/BR,EAAOS,GAAKnB,EAAOmB,IAAM,KACzBT,EAAOU,OAASpB,EAAOoB,QAAU,WAEjCV,EAAOQ,MAAQlB,EAAOkB,OAAS,UAC/BR,EAAOS,GAAKnB,EAAOmB,IAAM,KACzBT,EAAOU,OAASpB,EAAOoB,QAAU,UAGrCV,EAAOW,MAAQV,EAAWW,OAE1BZ,EAAOa,SAAW,WACdzB,EAAUsB,UAGdV,EAAOc,KAAO,WACV1B,EAAU2B,uCCzD1B,WACI,YAEA,IAAI9B,GAAaC,QAAQ3B,OAAO,0BAEhC0B,GAAW+B,OAAO,aAAa,YAAU,SAASd,GAC9C,GAAIC,GAAeD,EAAUE,IAAI,gBAC3BF,EAAUG,IAAI,gBAAkB,IAEtC,OAAO,UAAUY,GACb,MAAOd,GAAgBA,EAAae,UAAUD,IAAQA,EAAMA,iCCVxE,YAEAxC,GAAO,mBACPA,EAAO,iBACPA,EAAO,aAEPS,QACK3B,OAAO,cACJ,uBAEA,mBAEA,4BAKkB4D,kBAAA,EAAAC,gBAAA,EAAAC,YAAA,KAAAC,GAAA,SAAA7C,EAAAlB,EAAAD,GCxB1B,YAIA,IAAAiE,GAAA,WAAA,QAAAA,KACWzD,KAAA2C,GAAa,KACb3C,KAAA4C,OAAiB,SACjB5C,KAAA0D,aAAuB,gBACvB1D,KAAA2D,cAAwB,UACxB3D,KAAA4D,aAAuB,UACvB5D,KAAA6D,UAAoB,OACpB7D,KAAA8D,YAAsB,SACtB9D,KAAA+D,UAAoB,OACpB/D,KAAAgE,MAAgB,QAChBhE,KAAAiE,UAAoB,QAC/B,MAAAR,KAXajE,GAAAiE,aAAYA,CAazB,IAAAS,GAAA,WAAA,QAAAA,KACWlE,KAAA2C,GAAa,KACb3C,KAAA4C,OAAiB,SACjB5C,KAAAgE,MAAgB,QAC3B,MAAAE,KAJa1E,GAAA0E,YAAWA,CAMxB,IAAAC,GAAA,mBAYQA,GAAW7C,EAAAc,EAAAC,EAAAF,EAAAX,GACX,UACAxB,MAAIoE,OAAA,GAAYX,EACZ,IAAIpB,GAAeD,EAAAE,IAAA,gBAAAF,EAAAG,IAAA,gBAAA,IACfF,MACIG,aAAiB,MACjB6B,cAAQ,gBACRC,KAAQ,aACRC,KAAO,OACPC,MAAQ,QACRC,OAAS,SACTC,QAAW,UACZC,QAAA,cAECnC,aAAiB,MACjB6B,cAAQ,gBACRC,KAAQ,aACRC,KAAO,OACPC,MAAQ,SACRC,OAAS,QACVC,QAAA,cAEH1E,KAAKoE,OAAOzB,GAAAnB,EAASmB,GACrB3C,KAAKoE,OAAOxB,OAAApB,EAAeoB,OAC3B5C,KAAKoE,OAAOV,aAAa,gBACzB1D,KAAKoE,OAAOT,cAAe,UAC3B3D,KAAKoE,OAAOR,aAAY,UACxB5D,KAAKoE,OAAOP,UAAW,OACvB7D,KAAKoE,OAAON,YAAY,SACxB9D,KAAKoE,OAAOL,UAAY,OAC3B/D,KAAAoE,OAAAH,UAAA,UAEGjE,KAAKoE,OAAOzB,GAAAnB,EAASmB,GACxB3C,KAAAoE,OAAAxB,OAAApB,EAAAoB,QAED5C,KAAKsB,UAAQA,EACbtB,KAAK6C,MAAOV,EAAQW,OAC3B9C,KAAAoE,OAAAJ,MAAAxC,EAAAwC,MAjDL,MAMIG,GAAAS,SACI,YACA,YACA,eACA,aACmB,YAyCGC,UAAA7B,KAAA,WACzBhD,KAAAsB,UAAA2B,UAG2B4B,UAAA9B,SAAA,WAC3B/C,KAAAsB,UAAAsB,UAEJuB,IAED3E,GAAO2E,6BAAAA,UAEF1E,OAAA,8ECrFLqF,GAAA,SAAAnE,EAAAlB,EAAAD,MAEIuF,GAAA,WAEA,QAACA,GAAAzD,GACMtB,KAAAgF,UAAA1D,EAuBX,SAzBsBsD,SAAa,eAIZC,UAAStD,KAAK,SAAAC,EAAAC,EAAAC,QACzBsD,UAAWzD,MACXI,YAAYH,EAAAI,MACZC,YAAY,kCACZC,WAAS,kCACTmD,aAAA,KACDlD,QAAAP,OAAAA,wBACG,SAEE,WACHC,GACFA,gBAGEC,GACFA,OAMJqD,6CC7BPG,QAAa,wBAAAH,QAEbI,GAAO,SAAAxE,EAAAlB,EAAAD,wBAGCC,OAAA,yBACA,aAER,uBACA,oDCTAkB,EAAA,8BAIAyE,2BAAA,EAAAC,wBAAA,IAAAC,GAAA,SAAA3E,EAAAlB,EAAAD,sBAC6B,WAK7B,QAAC+F,KAADvF,KAAA2C,GAAA,KANa,MAAA4C,QAQbA,mBAAAA,QAC6B,WAK7B,QAACC,KAADxF,KAAA2C,GAAA,KANa,MAAA6C,QAcTA,kBAAAA,QAMe,mBAGPC,GAA0BnE,EAAKc,EAAAC,EAAAF,EAAAX,GAEnC,UACAxB,MAAIoE,OAAA,GAAcmB,MACYG,GAA1BC,EAAAnE,EAAaoE,QACbvD,EAAaD,EAAYE,IAAC,gBAAQF,EAAqBG,IAAA,gBAAgB,IAEvEF,IACAA,EAAYG,aAAc,MAAQqD,kBAAC,gBACnCxD,EAAUG,aAAa,MAAUqD,kBAAS,eAC7C7F,KAAAoE,OAAA1B,MAAAlB,EAAAkB,OAAA,oBAAK1C,KAAEoE,OAAAzB,GAAAnB,EAAAmB,IAAA,KACJgD,EAAKtD,EAAee,UAAYuC,KAIhC3F,KAAAoE,OAAY1B,MAAAlB,EAAckB,OAAA,cAE1B1C,KAAAoE,OAAWzB,GAAInB,EAASmB,IAAG,SAE3BmD,GAAU1D,EAAUE,IAAA,aAAqBF,EAAEG,IAAA,aAAA,IAC3Cf,GAAOkE,MAAKI,IACfJ,EAAAK,EAAAC,SAAAxE,EAAAkE,KAAA,IACGC,EAAQG,EAAUG,QAAQN,EAAAD,GAE1BQ,QAACC,IAAS,WAAaR,IAE3B3F,KAAKoE,OAAOuB,QAAQA,EACvB3F,KAAAsB,UAAAA,EAEMtB,KAAA6C,MAAAV,EAAAW,OACH9C,KAAKoE,OAAAJ,MAAcxC,EAAGwC,MAS9B,SAzC0BY,SAAA,YAAqB,YAAA,eAAA,aAAA,UAmCpCa,EAAAZ,UAAA7B,KAAA,WACHhD,KAAKsB,UAAU2B,QAGvBwC,EAAAZ,UAAC9B,SAAA,WAAA/C,KAAAsB,UAAAsB,UAEM6C,OAEFA,4BAAWA,UC3EhBhG,OAAA,wBAEIqC,WAAA,iCAA4B2D,WACxB,SAAK9E,EAAYlB,EAAAD,MACrB4G,GAAC,mBAGSA,GAAe9E,QACjB0D,UAAa1D,QAFd8E,GAAAxB,SAAA,eAIWC,UAAEtD,KAAA,SAAAC,EAAgCC,EAAAC,QAC5CsD,UAAAzD,MACAI,YAAUH,EAAQI,MAClBC,YAAA,qCACDC,WAAA,8CACG,KACFC,QAAIP,OAAAA,wBACiB,IAEtBS,KAAA,WAENR,GAELA,OAIK2E,IC5BLhF,SAEA3B,OAAO,wBACFyF,QAAO,uBAAwBkB,QAC5BC,GAAA,SAAY1F,EAAAlB,EAAAD,wBAIpBC,OAAO,wBACP,oCCTA,yBAIAkB,EAAA,0BAAA,uDAQC,EAAA2F,uBAAA,IAAAC,IAAA,SAAA5F,EAAAlB,EAAAD,eAAD,IARAgH,GAQC,WARY,QAAAA,MAgBT,MAAAA,QAQIA,cAAcA,QACI,mBAEdC,GAAenF,EAAAc,EAAAC,EAAAF,EAAAX,mBAEfF,UAAaA,OAEb8C,OAAK,GAAOoC,MACZnE,GAAYD,EAAAE,IAAgB,gBAAUF,EAAgBG,IAAI,gBAAS,IACtEF,IAAKA,EAAEG,aAAA,MAAAkE,cAAA,kBACJrE,EAAYG,aAAc,MAAMkE,cAAmB,mBACnD1G,KAAKoE,OAAO1B,MAAAlB,EAAAkB,OAAmB,gBAClC1C,KAAAoE,OAAAuC,iBAAAnF,EAAAmF,kBAAA,WAIG3G,KAACoE,OAAO1B,MAAAlB,EAAmBkB,OAAK,gBAChC1C,KAACoE,OAAOuC,iBAAqBnF,EAAKmF,kBAAsB,UAE5D3G,KAAK6C,MAAOV,EAAYW,OAGxB9C,KAAAoE,OAAWwC,QAAKpF,EAAYoF,QAC/B5G,KAAAoE,OAAAyC,eAAAd,EAAAe,KAAAtF,EAAAoF,SAAAG,QAAA,QAEM/G,KAAAoE,OAAA4C,mBAAAhH,KAAPoE,OAAAyC,eAAAI,KACIjH,KAAKoE,OAAA8C,QAAiB1F,EAAA0F,QACzBlH,KAAAoE,OAAA+C,aAAA3F,EAAA2F,aAEMC,WAAApH,KAAAqH,WAAA,cA3BgBzC,SAAU,YAAI,YAAkB,eAAc,aAAsB,UA6B3F6B,EAAC5B,UAAA7B,KAAA,WAEMhD,KAAAsB,UAAA2B,UAES4B,UAAkB9B,SAAU,WAE3C/C,KAAAsB,UAAAsB,YAGoBiC,UAAWyC,eAAkB,SAAK1F,EAAA2F,KAC/CC,uBACApD,OAAM4C,mBAAiBO,EAAAN,QAE1BpC,UAAA4C,WAAA,SAAA7F,GACJ,KAAAA,EAAA8F,SAAA,KAAA9F,EAAA8F,UAEM9F,EAAA4F,kBACC5F,EAAM+F,iBACV3H,KAAS4H,aAGbnB,EAAC5B,UAAA+C,SAAA,WAEO,GAAAL,EACJA,GAASxB,EAAAe,KAAA9G,KAAAoE,OAAAwC,SAAAK,KAAAjH,KAAAoE,OAAA4C,qBACTd,QAAQC,IAACoB,GACTvH,KAAKsB,UAAQ2B,MAAAsE,OAAAA,EAAAL,QAAAlH,KAAAoE,OAAA8C,WAGrBT,EAAA5B,UAACwC,WAAA,WAAA,GAAAQ,EA1EYA,GAAAC,EAAA,iCA4END,EAAAE,SAEFtB,IC3FLjH,GAAAiH,wBAAAA,iBAGY,oBACP3E,WAAA,6BAAA2E,QACMuB,IAAA,SAAArH,EAAAlB,EAAID,SACQ,mBAEXyI,GAAa3G,QACb0D,UAAY1D,ECVxB,SDQYsD,SAAa,eAIPC,UAAStD,KAAQ,SAACC,EAAAC,EAAAC,QACxBsD,UAAAzD,MACDI,YAAAH,EAAAI,kBACG,6BACFE,WAAI,0CACA,KACJC,QAACP,OAAAA,GACFQ,qBAAA,SAEK,SAAAuF,GACH9F,GACFA,EAAA8F,EAAAA,SAIX,WAAC7F,GAEMA,OC7BPuG,aAIQxI,OAAA,oBACAyF,QAAA,mBAAsB+C,QACtBC,IAAA,SAAAvH,EAAuBlB,EAAED,GAEjC,YACA4B,wECDC,2BACG,sBAEI,+CAGe,GAAA+G,mBACf,KAAAC,IAAU,SAASzH,EAAAlB,EAAAD,sBAELmB,EAAAlB,EAAgBD,kCAGd4B,QAAO3B,OAAM,uBAAiB,aAAA,uBAAA,mCACjC,uBAAA,YAAA,SAAA6B,wBAGOE,EAAYC,EAAiBC,WAMjC2G,KACA7G,EAAWI,OAAEJ,EAAAI,MAAA0G,eACb9G,EAAUI,MAAE0G,cAAAP,UAPRnG,QACJJ,EAACI,MAAA4F,kBACJhG,EAAAI,MAAA+F,oBAQCpG,kBACIC,EAAUI,MACZC,YAAA,2BAEAC,WAAI,wCACAN,OAAAA,GACJQ,qBAAC,IAEDC,KAAA,SAAAsF,GACAc,IACI5G,GACHA,EAAA8F,IAER,WACHc,IAER3G,GAESA,aAOCI,WAAa,iCAAmB,SAAA,aAAA,YAAA,YAAA,SAAA,SAAAI,EAAAC,EAAAb,EAAAc,EAAAZ,GAqE1C,QAAA6F,KAED,GAAAQ,wCCnILA,EAAAE,cD6DoB3F,EAAiBE,IAAA,gBAAgBF,EAAAG,IAAA,gBAAA,QAGrCF,EAAYG,aAAU,MACtBkE,cAAO,kBACLrE,EAAEG,aAAA,MACJkE,cAAqB,mBAExBxE,EAAAQ,MAAAlB,EAAAkB,OAAA,gBAEDR,EAAOyE,iBAAmBnF,EAAOmF,kBAAA,WAGjCzE,EAAOQ,MAAUlB,EAAOkB,OAAW,gBACnCR,EAAWyE,iBAAkBnF,EAAGmF,kBAAA,UAEhCzE,EAAOW,MAAAV,EAAkBW,OACzBZ,EAAO0E,QAAApF,EAAgBoF,QAEvB1E,EAAOqG,UAAU/G,EAAO+G,YAAQ,EAChCrG,EAAOsG,QAAAhH,EAAegH,UAAO,EAE7BtG,EAAOuG,KAAAjH,EAAciH,MAAG,KACpB5B,eAAMd,EAAee,KAAGtF,EAAAoF,SAAAG,QAAA,UACxBC,mBAAO9E,EAAqB2E,eAAYI,OAErCyB,YAAQ3C,EAAA4C,UAAYnH,EAAAoF,QAAA1E,EAAA2E,0BACZrF,EAAQ0F,UAClBC,aAAA3F,EAAA2F,aACLjF,EAAEoF,eAAA,SAAA1F,EAAA2F,GAEF3F,EAAO4F,kBACHtF,EAAO8E,mBAAqBO,EAAON,KAE/B/E,EAAOqG,WAEVrG,EAAA0F,cAIEgB,WAAO,aACN5B,mBAAwB9E,EAAA0E,QAAA1E,EAAAwG,aAAAzB,KACxB/E,EAAMqG,qBAGF,SAAe3G,EAAGiH,GACrB,KAADjH,EAAC8F,SAAA,KAAA9F,EAAA8F,UACJ9F,EAAA4F,kBACH5F,EAAA+F,iBACgBmB,SAAXD,GAAWA,GAAA,GAAAA,EAAA3G,EAAA0E,QAAA3F,SACdiB,EAAU8E,mBAAS9E,EAAA0E,QAAAiC,GAAA5B,KACrB/E,EAAA0F,gBAKE7E,SAAc,WAChBzB,EAAAsB,YAGEgF,SAAS,WAET,GAAIL,EACJA,GAAKxB,EAAKe,KAAG5E,EAAA0E,SAAAK,KAAA/E,EAAA8E,qBAChB1F,EAAA2B,MAAAsE,OAAAA,EAAAL,QAAAhF,EAAAgF,WC3HbE,WAAAC,EAAA,gBAGA0B,IAAA,SAAApI,EAAAlB,EAAAD,IACA,SAAAC,GACA,IACAA,EAAA2B,QAAA3B,OAAA,wBACA,MAAAU,GACAV,EAAA2B,QAAA3B,OAAA,2BAEAA,EAAAuJ,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,iCACA,uVAIA,SAAAzJ,GACA,IACAA,EAAA2B,QAAA3B,OAAA,wBACA,MAAAU,GACAV,EAAA2B,QAAA3B,OAAA,2BAEAA,EAAAuJ,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,kCACA,kgFAIA,SAAAzJ,GACA,IACAA,EAAA2B,QAAA3B,OAAA,wBACA,MAAAU,GACAV,EAAA2B,QAAA3B,OAAA,2BAEAA,EAAAuJ,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,qCACA,8ZAIA,SAAAzJ,GACA,IACAA,EAAA2B,QAAA3B,OAAA,wBACA,MAAAU,GACAV,EAAA2B,QAAA3B,OAAA,2BAEAA,EAAAuJ,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,0BACA,67DAIA,SAAAzJ,GACA,IACAA,EAAA2B,QAAA3B,OAAA,wBACA,MAAAU,GACAV,EAAA2B,QAAA3B,OAAA,2BAEAA,EAAAuJ,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * @file Confirmation dialog\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipConfirmationDialog',\r\n        ['ngMaterial', 'pipDialogs.Translate', 'pipDialogs.Templates']);\r\n\r\n    thisModule.factory('pipConfirmationDialog',\r\n        function ($mdDialog) {\r\n            return {\r\n                show: function (params, successCallback, cancelCallback) {\r\n                    $mdDialog.show({\r\n                        targetEvent: params.event,\r\n                        templateUrl: 'confirmation/confirmation.html',\r\n                        controller: 'pipConfirmationDialogController',\r\n                        locals: { params: params },\r\n                        clickOutsideToClose: true\r\n                    })\r\n                    .then(function () {\r\n                        if (successCallback) {\r\n                            successCallback();\r\n                        }\r\n                    }, function () {\r\n                        if (cancelCallback) {\r\n                            cancelCallback();\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipConfirmationDialogController',\r\n        function ($scope, $rootScope, $mdDialog, $injector, params) {\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'CONFIRM_TITLE': 'Confirm'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'CONFIRM_TITLE': 'Подтвердите'\r\n                });\r\n\r\n                $scope.title = params.title || 'CONFIRM_TITLE';\r\n                $scope.ok = params.ok || 'OK';\r\n                $scope.cancel = params.cancel || 'CANCEL';\r\n            } else {\r\n                $scope.title = params.title || 'Confirm';\r\n                $scope.ok = params.ok || 'OK';\r\n                $scope.cancel = params.cancel || 'Cancel';\r\n            }\r\n\r\n            $scope.theme = $rootScope.$theme;\r\n\r\n            $scope.onCancel = function () {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            $scope.onOk = function () {\r\n                $mdDialog.hide();\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDialogs.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","﻿/**\r\n * @file Registration of dialogs\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n'use strict';\r\n\r\nimport './error_details';\r\nimport './information';\r\nimport './options';\r\n\r\nangular\r\n    .module('pipDialogs', [\r\n        'pipInformationDialog',\r\n        //'pipConfirmationDialog',\r\n        'pipOptionsDialog',\r\n        //'pipOptionsBigDialog',\r\n        'pipErrorDetailsDialog'\r\n    ]);\r\n\r\nexport * from './error_details';\r\nexport * from './information';\r\nexport * from './options';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class ErrorStrings {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'Cancel';\r\n    public errorDetails: string = 'Error details';\r\n    public dismissButton: string = 'Dismiss';\r\n    public errorMessage: string = 'Message';\r\n    public errorCode: string = 'Code';\r\n    public errorMethod: string = 'Method';\r\n    public errorPath: string = 'Path';\r\n    public error: string = 'Error';\r\n    public errorText: string = 'Error';   \r\n}\r\n\r\nexport class ErrorParams {\r\n    public ok: string = 'OK';\r\n    public cancel: string = 'CANCEL';\r\n    public error: string = 'ERROR';\r\n}\r\n\r\nexport class ErrorDetailsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: ErrorStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        pipTranslate, \r\n        $rootScope, \r\n        params: ErrorParams) {\r\n        \"ngInject\";\r\n        this.config = new ErrorStrings();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'ERROR_DETAILS': 'Error details',\r\n                    'CODE': 'Error code',\r\n                    'PATH': 'Path',\r\n                    'ERROR': 'Error',\r\n                    'METHOD': 'Method',\r\n                    'MESSAGE': 'Message',\r\n                    'DISMISS': 'Dismiss'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'ERROR_DETAILS': 'Детали ошибки',\r\n                    'CODE': 'Код ошибки',\r\n                    'PATH': 'Путь',\r\n                    'ERROR': 'Ошибка',\r\n                    'METHOD': 'Метод',\r\n                    'MESSAGE': 'Сообщение'\r\n                });\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n                this.config.errorDetails = 'ERROR_DETAILS';\r\n                this.config.dismissButton = 'DISMISS';\r\n                this.config.errorMessage = 'MESSAGE';\r\n                this.config.errorCode = 'CODE';\r\n                this.config.errorMethod = 'METHOD';\r\n                this.config.errorPath = 'PATH';\r\n                this.config.errorText = 'ERROR';                \r\n            } else {\r\n                this.config.ok = params.ok;\r\n                this.config.cancel = params.cancel;\r\n            }\r\n            this.$mdDialog = $mdDialog;\r\n            this.theme = $rootScope.$theme;\r\n            this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\r\nclass ErrorDetailsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'error_details/ErrorDetails.html',\r\n            controller: 'pipErrorDetailsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(() => {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog')\r\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\r\n\r\nangular\r\n    .module('pipErrorDetailsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './ErrorDetailsService';\r\nimport './ErrorDetailsController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class InformationStrings {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public content;\r\n}\r\n\r\nexport class InformationParams {\r\n    public ok: string = 'OK';\r\n    public title: string; \r\n    public message: string;\r\n    public error: string;\r\n    public item;\r\n}\r\n\r\nexport class InformationDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: InformationStrings;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        pipTranslate, \r\n        $rootScope, \r\n        params: InformationParams) {\r\n        \"ngInject\";\r\n        this.config = new InformationStrings();\r\n\r\n        var content = params.message, item;\r\n\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\r\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\r\n\r\n            this.config.title = params.title || 'INFORMATION_TITLE';\r\n            this.config.ok = params.ok || 'OK';\r\n            content = pipTranslate.translate(content);\r\n        } else {\r\n            this.config.title = params.title || 'Information';\r\n            this.config.ok = params.ok || 'OK';\r\n        }\r\n\r\n        var pipFormat = $injector.has('pipFormat') ? $injector.get('pipFormat') : null;\r\n\r\n        if (params.item && pipFormat) {\r\n            item = _.truncate(params.item, 25);\r\n            content = pipFormat.sprintf(content, item);\r\n            console.log('content2', content);\r\n        }\r\n        this.config.content = content;\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.theme = $rootScope.$theme;\r\n        this.config.error = params.error;\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .controller('pipInformationDialogController', InformationDialogController);","\r\nclass InformationService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'information/InformationDialog.html',\r\n            controller: 'pipInformationDialogController',\r\n            controllerAs: 'vm',\r\n            locals: { params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then(function () {\r\n            if (successCallback) {\r\n                successCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipInformationDialog')\r\n    .service('pipInformationDialog', InformationService);","'use strict';\r\n\r\nangular\r\n    .module('pipInformationDialog', [\r\n        'ngMaterial',\r\n        'pipDialogs.Translate', \r\n        'pipDialogs.Templates']);\r\n\r\nimport './InformationService';\r\nimport './InformationController';\r\n","'use strict';\r\n\r\nimport IWindowService = angular.IWindowService;\r\n\r\nexport class OptionsParams {\r\n    public title: string;  \r\n    public applyButtonTitle: string;\r\n    public options;\r\n    public selectedOption;\r\n    public deleted;\r\n    public selectedOptionName: string;\r\n    public deletedTitle;\r\n}\r\n\r\nexport class OptionsDialogController {\r\n\r\n    public $mdDialog;\r\n    public theme;\r\n    public config: OptionsParams;\r\n\r\n    constructor(\r\n        $mdDialog,\r\n        $injector,\r\n        pipTranslate, \r\n        $rootScope, \r\n        params: OptionsParams) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this.config = new OptionsParams();\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        if (pipTranslate) {\r\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\r\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\r\n\r\n            this.config.title = params.title || 'OPTIONS_TITLE';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n        } else {\r\n            this.config.title = params.title || 'Choose Option';\r\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n        }\r\n\r\n        this.theme = $rootScope.$theme;\r\n        this.config.options = params.options;\r\n        this.config.selectedOption = _.find(params.options, {active: true}) || {};\r\n        this.config.selectedOptionName = this.config.selectedOption.name;\r\n        this.config.deleted = params.deleted;\r\n        this.config.deletedTitle = params.deletedTitle;\r\n\r\n        \r\n        setTimeout(this.focusInput, 500);\r\n    }\r\n\r\n    public onOk(): void {\r\n        this.$mdDialog.hide();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n\r\n    public onOptionSelect(event, option) {\r\n        event.stopPropagation();\r\n        this.config.selectedOptionName = option.name;\r\n\r\n    }\r\n            \r\n    public onKeyPress (event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.onSelect();\r\n        }\r\n    }\r\n\r\n    public onSelect() {\r\n        let option;\r\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\r\n        console.log(option);\r\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\r\n    }\r\n\r\n    private focusInput() {\r\n        let list;\r\n        list = $('.pip-options-dialog .pip-list');\r\n        list.focus();\r\n    }\r\n\r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .controller('pipOptionsDialogController', OptionsDialogController);","\r\nclass OptionsService {\r\n    public _mdDialog;\r\n    public constructor($mdDialog) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback, cancelCallback) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: 'options/OptionsDialog.html',\r\n            controller: 'pipOptionsDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((option) => {\r\n            if (successCallback) {\r\n                successCallback(option.option);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n                \r\n    }\r\n    \r\n}\r\n\r\nangular\r\n    .module('pipOptionsDialog')\r\n    .service('pipOptionsDialog', OptionsService);","'use strict';\r\n\r\nangular\r\n    .module('pipOptionsDialog', [\r\n        'ngMaterial', \r\n        'pipDialogs.Translate',\r\n        'pipDialogs.Templates']);\r\n\r\nimport './OptionsService';\r\nimport './OptionsController';\r\n","/**\r\n * @file Options dialog\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve sample in sampler app\r\n * - Remove deleted hack in the controller\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipOptionsBigDialog',\r\n        ['ngMaterial', 'pipDialogs.Translate', 'pipDialogs.Templates']);\r\n\r\n    thisModule.factory('pipOptionsBigDialog',\r\n        function ($mdDialog) {\r\n            return {\r\n                show: function (params, successCallback, cancelCallback) {\r\n                    if (params.event) {\r\n                        params.event.stopPropagation();\r\n                        params.event.preventDefault();\r\n                    }\r\n\r\n                    function focusToggleControl() {\r\n                        if (params.event && params.event.currentTarget) {\r\n                            params.event.currentTarget.focus();\r\n                        }\r\n                    }\r\n\r\n                    $mdDialog.show({\r\n                        targetEvent: params.event,\r\n                        templateUrl: 'options/options_big.html',\r\n                        controller: 'pipOptionsDialogBigController',\r\n                        locals: {params: params},\r\n                        clickOutsideToClose: true\r\n                    })\r\n                    .then(function (option) {\r\n                        focusToggleControl();\r\n\r\n                        if (successCallback) {\r\n                            successCallback(option);\r\n                        }\r\n                    }, function () {\r\n                        focusToggleControl();\r\n                        if (cancelCallback) {\r\n                            cancelCallback();\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipOptionsDialogBigController',\r\n        function ($scope, $rootScope, $mdDialog, $injector, params) {\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                pipTranslate.translations('en', {\r\n                    'OPTIONS_TITLE': 'Choose Option'\r\n                });\r\n                pipTranslate.translations('ru', {\r\n                    'OPTIONS_TITLE': 'Выберите опцию'\r\n                });\r\n\r\n                $scope.title = params.title || 'OPTIONS_TITLE';\r\n                $scope.applyButtonTitle = params.applyButtonTitle || 'SELECT';\r\n            } else {\r\n                $scope.title = params.title || 'Choose Option';\r\n                $scope.applyButtonTitle = params.applyButtonTitle || 'Select';\r\n            }\r\n\r\n            $scope.theme = $rootScope.$theme;\r\n            $scope.options = params.options;\r\n            $scope.noActions = params.noActions || false;\r\n            $scope.noTitle = params.noTitle || false;\r\n            $scope.hint = params.hint || '';\r\n            $scope.selectedOption = _.find(params.options, {active: true}) || {};\r\n            $scope.selectedOptionName = $scope.selectedOption.name;\r\n            $scope.optionIndex = _.findIndex(params.options, $scope.selectedOption);\r\n\r\n            $scope.deleted = params.deleted;\r\n            $scope.deletedTitle = params.deletedTitle;\r\n\r\n            $scope.onOptionSelect = function (event, option) {\r\n                event.stopPropagation();\r\n                $scope.selectedOptionName = option.name;\r\n\r\n                if ($scope.noActions) {\r\n                    $scope.onSelect();\r\n                }\r\n            };\r\n\r\n            $scope.onSelected = function () {\r\n                $scope.selectedOptionName = $scope.options[$scope.optionIndex].name;\r\n\r\n                if ($scope.noActions) {\r\n                    // $scope.onSelect();\r\n                }\r\n            };\r\n\r\n            $scope.onKeyUp = function (event, index) {\r\n                if (event.keyCode === 32 || event.keyCode === 13) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    if (index !== undefined && index > -1 && index < $scope.options.length) {\r\n                        $scope.selectedOptionName = $scope.options[index].name;\r\n                        $scope.onSelect();\r\n                    }\r\n                }\r\n            };\r\n            $scope.onCancel = function () {\r\n                $mdDialog.cancel();\r\n            };\r\n            $scope.onSelect = function () {\r\n                var option;\r\n\r\n                option = _.find($scope.options, {name: $scope.selectedOptionName});\r\n                $mdDialog.hide({option: option, deleted: $scope.deleted});\r\n            };\r\n            // Setting focus to input control\r\n            function focusInput() {\r\n                var list;\r\n\r\n                list = $('.pip-options-dialog .pip-list');\r\n                list.focus();\r\n            }\r\n\r\n            setTimeout(focusInput, 500);\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/confirmation.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::theme}}\"><div class=\"pip-header\"><h3>{{:: title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"onCancel()\">{{:: cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"onOk()\">{{:: ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBig.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': noTitle && hint}\"><h3 class=\"m0\" ng-if=\"!noTitle\">{{::title | translate}}</h3><div ng-show=\"noTitle && hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"optionIndex\" index=\"{{optionIndex }}\" pip-select=\"onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"onKeyUp($event, $index)\" ng-repeat=\"option in options\"><div class=\"pip-content content-stretch\" ng-click=\"onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"onSelect()\" style=\"margin-right: -6px\">{{::applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}