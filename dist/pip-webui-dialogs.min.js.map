{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/confirmation/ConfirmationController.ts","src/confirmation/ConfirmationService.ts","src/confirmation/index.ts","src/dependencies/translate.ts","src/dialogs.ts","src/error_details/ErrorDetailsController.ts","src/error_details/ErrorDetailsService.ts","src/error_details/index.ts","src/information/InformationController.ts","src/information/InformationService.ts","src/information/index.ts","src/options/OptionsBigController.ts","src/options/OptionsBigService.ts","src/options/OptionsController.ts","src/options/OptionsService.ts","src/options/index.ts","temp/pip-webui-dialogs-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dialogs","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ConfirmationParams","ok","cancel","ConfirmationDialogController","$mdDialog","$injector","$rootScope","params","config","pipTranslate","has","get","translations","CONFIRM_TITLE","title","translate","theme","$inject","prototype","onOk","hide","onCancel","Object","defineProperty","value","ConfirmationService","_mdDialog","show","successCallback","cancelCallback","targetEvent","event","templateUrl","controller","controllerAs","locals","./ConfirmationService","4","thisModule","angular","filter","key","ErrorStrings","errorDetails","dismissButton","errorMessage","errorCode","errorMethod","errorPath","error","errorText","ErrorParams","ErrorDetailsDialogController","OK","CANCEL","ERROR_DETAILS","CODE","PATH","ERROR","METHOD","MESSAGE","DISMISS","$theme","ErrorDetailsService","then","8","./ErrorDetailsService","9","InformationStrings","InformationParams","InformationDialogController","item","content","message","INFORMATION_TITLE","pipFormat","_","truncate","sprintf","InformationService","clickOutsideToClose","service","11","./InformationService","12","OptionsBigData","OptionsBigParams","noTitle","noActions","optionIndex","OptionsBigDialogController","onSelect","option","find","options","name","selectedOptionName","deleted","OPTIONS_TITLE","applyButtonTitle","selectedOption","active","deletedTitle","hint","setTimeout","focusInput","onOptionSelect","stopPropagation","onSelected","onKeyUp","index","keyCode","preventDefault","undefined","list","$","focus","13","OptionsBigService","14","OptionsData","icon","OptionsParams","OptionsDialogController","onKeyPress","OptionsService","16","./OptionsBigController","./OptionsBigService","./OptionsController","./OptionsService","17","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dialogs.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nexport class ConfirmationParams {\n    public ok: string = 'OK';\n    public title?: string; \n    public cancel: string = 'Cancel';\n    public event?: MouseEvent;\n}\n\nexport class ConfirmationDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: ConfirmationParams;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService,\n        $rootScope: ng.IRootScopeService,\n        params: ConfirmationParams) \n    {\n        \"ngInject\";\n        this.config = new ConfirmationParams();\n\n        let pipTranslate: pip.services.ITranslateService;\n        pipTranslate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'CONFIRM_TITLE': 'Confirm' });\n            pipTranslate.translations('ru', { 'CONFIRM_TITLE': 'Подтвердите'});\n\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('CONFIRM_TITLE');\n            this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\n            this.config.cancel = pipTranslate.translate(params.cancel) || ('CANCEL');\n        } else {\n            this.config.title = params.title || 'Confirm';\n            this.config.ok = params.ok || 'OK';\n            this.config.cancel = params.cancel || 'Cancel';\n        }\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope['$theme'];\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipConfirmationDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates'])\n    .controller('pipConfirmationDialogController', ConfirmationDialogController);","import { ConfirmationParams } from './ConfirmationController';\n\nexport interface IConfirmationService {\n    show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void): any;\n}\n\nclass ConfirmationService implements IConfirmationService {\n    private _mdDialog: angular.material.IDialogService;\n    \n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params: ConfirmationParams, successCallback?: () => void, cancelCallback?: () => void) {\n        this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'confirmation/ConfirmationDialog.html',\n            controller: 'pipConfirmationDialogController',\n            controllerAs: 'vm',\n            locals: { params: params },\n            clickOutsideToClose: true\n        })\n        .then(() => {\n            if (successCallback) {\n                successCallback();\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n    \n}\n\nangular\n    .module('pipConfirmationDialog')\n    .service('pipConfirmationDialog', ConfirmationService);","'use strict';\n\nimport './ConfirmationController';\nimport './ConfirmationService';\n","/**\n * @file Optional filter to translate string resources\n * @copyright Digital Living Software Corp. 2014-2016\n */\n \n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipDialogs.Translate', []);\n\n    thisModule.filter('translate', function ($injector: ng.auto.IInjectorService) {\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \n            ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n\n        return function (key: string) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    });\n\n})();\n","﻿/**\n * @file Registration of dialogs\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n'use strict';\n\nimport './error_details';\nimport './information';\nimport './options';\nimport './confirmation';\n\nangular\n    .module('pipDialogs', [\n        'pipInformationDialog',\n        'pipConfirmationDialog',\n        'pipOptionsDialog',\n        'pipOptionsBigDialog',\n        'pipErrorDetailsDialog',\n        //'pipErrorDetails2Dialog'\n    ]);\n\nexport * from './error_details';\n//export * from './error_details2';\nexport * from './information';\nexport * from './options';\nexport * from './confirmation';\n","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class ErrorStrings {\n    public ok: string = 'OK';\n    public cancel: string = 'Cancel';\n    public errorDetails: string = 'Error details';\n    public dismissButton: string = 'Dismiss';\n    public errorMessage: string = 'Message';\n    public errorCode: string = 'Code';\n    public errorMethod: string = 'Method';\n    public errorPath: string = 'Path';\n    public error: string = 'Error';\n    public errorText: string = 'Error';   \n}\n\nexport class ErrorParams {\n    public ok: string = 'OK';\n    public cancel: string = 'CANCEL';\n    public error: string = 'ERROR';\n}\n\nexport class ErrorDetailsDialogController {\n    public $mdDialog: ng.material.IDialogService;\n    public theme: string;\n    public config: ErrorStrings;\n\n    constructor(\n        $mdDialog: ng.material.IDialogService,\n        $injector: ng.auto.IInjectorService,\n        $rootScope: ng.IRootScopeService, \n        params: ErrorParams) \n    {\n        \"ngInject\";\n        this.config = new ErrorStrings();\n        let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n            if (pipTranslate) {\n                pipTranslate.translations('en', {\n                    'OK': 'Ok',\n                    'CANCEL': 'Cancel',\n                    'ERROR_DETAILS': 'Error details',\n                    'CODE': 'Error code',\n                    'PATH': 'Path',\n                    'ERROR': 'Error',\n                    'METHOD': 'Method',\n                    'MESSAGE': 'Message',\n                    'DISMISS': 'Dismiss'\n                });\n                pipTranslate.translations('ru', {\n                    'OK': 'Ок',\n                    'CANCEL': 'Отмена',                    \n                    'ERROR_DETAILS': 'Детали ошибки',\n                    'CODE': 'Код ошибки',\n                    'PATH': 'Путь',\n                    'ERROR': 'Ошибка',\n                    'METHOD': 'Метод',\n                    'MESSAGE': 'Сообщение'\n                });\n                this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\n                this.config.cancel = pipTranslate.translate(params.cancel) || pipTranslate.translate('CANCEL');\n                this.config.errorDetails = pipTranslate.translate('ERROR_DETAILS');\n                this.config.dismissButton = pipTranslate.translate('DISMISS');\n                this.config.errorMessage = pipTranslate.translate('MESSAGE');\n                this.config.errorCode = pipTranslate.translate('CODE');\n                this.config.errorMethod = pipTranslate.translate('METHOD');\n                this.config.errorPath = pipTranslate.translate('PATH');\n                this.config.errorText = pipTranslate.translate('ERROR');                \n            } else {\n                this.config.ok = params.ok || 'Ok';\n                this.config.cancel = params.cancel || 'Cancel';\n            }\n            this.$mdDialog = $mdDialog;\n            this.theme = $rootScope.$theme;\n            this.config.error = params.error;\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipErrorDetailsDialog')\n    .controller('pipErrorDetailsDialogController', ErrorDetailsDialogController);","\nclass ErrorDetailsService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback, cancelCallback) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'error_details/ErrorDetails.html',\n            controller: 'pipErrorDetailsDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then(() => {\n            if (successCallback) {\n                successCallback();\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipErrorDetailsDialog')\n    .service('pipErrorDetailsDialog', ErrorDetailsService);","'use strict';\n\nangular\n    .module('pipErrorDetailsDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './ErrorDetailsService';\nimport './ErrorDetailsController';\n","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class InformationStrings {\n    public ok: string = 'OK';\n    public title: string; \n    public message: string;\n    public error: string;\n    public content;\n}\n\nexport class InformationParams {\n    public ok: string = 'OK';\n    public title?: string; \n    public message?: string;\n    public error?: string;\n    public item: any;\n}\n\nexport class InformationDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: InformationStrings;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService,\n        $rootScope: ng.IRootScopeService, \n        params: InformationParams) \n    {\n        \"ngInject\";\n        this.config = new InformationStrings();\n\n        let content = params.message, item;\n\n        let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'INFORMATION_TITLE': 'Information'});\n            pipTranslate.translations('ru', { 'INFORMATION_TITLE': 'Информация' });\n\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('INFORMATION_TITLE');\n            this.config.ok = pipTranslate.translate(params.ok) || pipTranslate.translate('OK');\n            content = pipTranslate.translate(content);\n        } else {\n            this.config.title = params.title || 'Information';\n            this.config.ok = params.ok || 'OK';\n        }\n\n        let pipFormat: pip.services.IFormat = $injector.has('pipFormat') ? <pip.services.IFormat>$injector.get('pipFormat') : null;\n\n        if (params.item && pipFormat) {\n            item = _.truncate(params.item, 25);\n            content = pipFormat.sprintf(content, item);\n        }\n        this.config.content = content;\n\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope['$theme'];\n        this.config.error = params.error;\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n}\n\nangular\n    .module('pipInformationDialog')\n    .controller('pipInformationDialogController', InformationDialogController);","export interface IInformationService {\n    show(params, successCallback?: () => void, cancelCallback?: () => void): any;\n}\n\nclass InformationService implements IInformationService {\n    private _mdDialog: angular.material.IDialogService;\n    \n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n\n    public show(params, successCallback?: () => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'information/InformationDialog.html',\n            controller: 'pipInformationDialogController',\n            controllerAs: 'vm',\n            locals: { params: params},\n            clickOutsideToClose: true\n         })\n        .then(function () {\n            if (successCallback) {\n                successCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipInformationDialog')\n    .service('pipInformationDialog', InformationService);","'use strict';\n\nangular\n    .module('pipInformationDialog', [\n        'ngMaterial',\n        'pipDialogs.Translate', \n        'pipDialogs.Templates']);\n\nimport './InformationService';\nimport './InformationController';\n","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class OptionsBigData {\n    public name: string;\n    public title: string;\n    public subtitle: string;\n}\n\nexport class OptionsBigParams {\n    public title?: string;  \n    public applyButtonTitle?: string;\n    public options?: OptionsBigData[];\n    public selectedOption?: OptionsBigData;\n    public deleted?: boolean;\n    public selectedOptionName?: string;\n    public deletedTitle?: string;\n    public hint?: string;\n    public noTitle: boolean = false;\n    public noActions: boolean = false;\n    public optionIndex: number = 0;\n}\n\nexport interface IOptionsBigDialogController {\n    onOk(): void;\n    onCancel(): void;\n    onKeyUp(event: JQueryKeyEventObject, index: number): void;\n    onOptionSelect(event: ng.IAngularEvent, option: OptionsBigData);\n    onSelected(): void;\n    onSelect: Function;\n    config: OptionsBigParams;\n    theme: string;\n}\n\nexport class OptionsBigDialogController implements IOptionsBigDialogController {\n\n    private $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: OptionsBigParams;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService, \n        $rootScope: ng.IRootScopeService, \n        params: OptionsBigParams) \n    {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.config = new OptionsBigParams();\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\n\n            this.config.title =  pipTranslate.translate(params.title) || pipTranslate.translate('OPTIONS_TITLE');\n            this.config.applyButtonTitle = pipTranslate.translate(params.applyButtonTitle) || pipTranslate.translate('SELECT');\n        } else {\n            this.config.title = params.title || 'Choose Option';\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\n        }\n\n        this.theme = $rootScope['$theme'];\n        this.config.options = params.options;\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsBigData();\n        this.config.selectedOptionName = this.config.selectedOption.name;\n        this.config.deleted = params.deleted;\n        this.config.deletedTitle = params.deletedTitle;\n        this.config.noActions = params.noActions || false;\n        this.config.noTitle = params.noTitle || false;\n        this.config.hint = params.hint || '';\n\n        setTimeout(this.focusInput, 500);\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsBigData) {\n        event.stopPropagation();\n        this.config.selectedOptionName = option.name;\n\n        if (this.config.noActions) {\n            this.onSelect();\n        }\n    }\n\n    public onSelected() {\n        this.config.selectedOptionName = this.config.options[this.config.optionIndex].name;\n\n        if (this.config.noActions) {\n               this.onSelect();\n        }\n    }\n\n    public onKeyUp(event: JQueryKeyEventObject, index: number) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (index !== undefined && index > -1 && index < this.config.options.length) {\n                this.config.selectedOptionName = this.config.options[index].name;\n                this.onSelect();\n            }\n        }\n    }\n    \n    public onSelect = function () {\n        let option: OptionsBigData;\n        option = <OptionsBigData>_.find(this.config.options, {name: this.config.selectedOptionName}) || new OptionsBigData();\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\n    };\n\n\n    private focusInput() {\n        let list;\n        list = $('.pip-options-dialog .pip-list');\n        list.focus();\n    }\n\n}\n\nangular\n    .module('pipOptionsBigDialog')\n    .controller('pipOptionsBigDialogController', OptionsBigDialogController);","export interface IOptionsBigService {\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\n}\n\nclass OptionsBigService implements IOptionsBigService {\n    public _mdDialog: angular.material.IDialogService;\n    constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'options/OptionsBigDialog.html',\n            controller: 'pipOptionsBigDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((option) => {\n            if (successCallback) {\n                successCallback(option);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n    \n}\n\nangular\n    .module('pipOptionsBigDialog')\n    .service('pipOptionsBigDialog', OptionsBigService);","'use strict';\n\nimport IWindowService = angular.IWindowService;\n\nexport class OptionsData {\n    public icon: string = 'star';\n    public name: string;\n    public title: string;\n    public active: boolean = true; \n}\n\nexport class OptionsParams {\n    public title?: string;  \n    public applyButtonTitle?: string;\n    public options?: OptionsData[];\n    public selectedOption?: OptionsData;\n    public deleted?: boolean;\n    public selectedOptionName?: string;\n    public deletedTitle?: string;\n}\n\nexport class OptionsDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public config: OptionsParams;\n\n    constructor(\n        $mdDialog: angular.material.IDialogService,\n        $injector: ng.auto.IInjectorService, \n        $rootScope: ng.IRootScopeService, \n        params: OptionsParams) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this.config = new OptionsParams();\n        var pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n        if (pipTranslate) {\n            pipTranslate.translations('en', { 'OPTIONS_TITLE': 'Choose Option'});\n            pipTranslate.translations('ru', { 'OPTIONS_TITLE': 'Выберите опцию'});\n\n            this.config.title = pipTranslate.translate(params.title) || pipTranslate.translate('OPTIONS_TITLE');\n            this.config.applyButtonTitle = pipTranslate.translate(params.applyButtonTitle) || pipTranslate.translate('SELECT');\n        } else {\n            this.config.title = params.title || 'Choose Option';\n            this.config.applyButtonTitle = params.applyButtonTitle || 'Select';\n        }\n\n        this.theme = $rootScope['$theme'];\n        this.config.options = params.options;\n        this.config.selectedOption = _.find(params.options, {active: true}) || new OptionsData();\n        this.config.selectedOptionName = this.config.selectedOption.name;\n        this.config.deleted = params.deleted;\n        this.config.deletedTitle = params.deletedTitle;\n\n        setTimeout(this.focusInput, 500);\n    }\n\n    public onOk(): void {\n        this.$mdDialog.hide();\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n    public onOptionSelect(event: ng.IAngularEvent, option: OptionsData) {\n        event.stopPropagation();\n        this.config.selectedOptionName = option.name;\n    }\n            \n    public onKeyPress (event: JQueryKeyEventObject) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSelect();\n        }\n    }\n\n    public onSelect() {\n        let option: OptionsData;\n        option = _.find(this.config.options, {name: this.config.selectedOptionName});\n\n        this.$mdDialog.hide({option: option, deleted: this.config.deleted});\n    }\n\n    private focusInput() {\n        let list;\n        list = $('.pip-options-dialog .pip-list');\n        list.focus();\n    }\n\n}\n\nangular\n    .module('pipOptionsDialog')\n    .controller('pipOptionsDialogController', OptionsDialogController);","\nexport interface IOptionsService {\n    show(params, successCallback?: (option) => void, cancelCallback?: () => void): any;\n}\n\nclass OptionsService implements IOptionsService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public  show(params, successCallback?: (option) => void, cancelCallback?: () => void): any {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'options/OptionsDialog.html',\n            controller: 'pipOptionsDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((option) => {\n            if (successCallback) {\n                successCallback(option.option);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipOptionsDialog')\n    .service('pipOptionsDialog', OptionsService);","'use strict';\n\nangular\n    .module('pipOptionsDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n\nimport './OptionsService';\nimport './OptionsController';\n\n\nangular\n    .module('pipOptionsBigDialog', [\n        'ngMaterial', \n        'pipDialogs.Translate',\n        'pipDialogs.Templates']);\n        \nimport './OptionsBigService';\nimport './OptionsBigController';","(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('confirmation/ConfirmationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-confirmation-dialog layout-column\" width=\"400\" md-theme=\"{{::vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title}}</h3></div><div class=\"pip-footer\"><div><md-button ng-click=\"vm.onCancel()\">{{:: vm.config.cancel}}</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{:: vm.config.ok}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('error_details/ErrorDetails.html',\n    '<md-dialog class=\"pip-dialog pip-error-details-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body\"><div class=\"pip-header\"><h3>{{::vm.config.errorDetails | translate}}</h3></div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.code || (vm.config.error.data && error.data.code)\">{{::vm.config.errorCode | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.code || (vm.config.error.data && vm.config.error.data.code)\">{{vm.config.error.code || vm.config.error.data.code}}</div><div class=\"layout-row layout-align-start-center error-section text-body2 color-secondary-text\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{::vm.config.errorPath | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.path || (vm.config.error.data && vm.config.error.data.path)\">{{vm.config.error.path || vm.config.error.data.path}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{::vm.config.errorText | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.error || (vm.config.error.data && vm.config.error.data.error)\">{{vm.config.error.error || vm.config.error.data.error}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{::vm.config.errorMethod | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.method || (vm.config.error.data && vm.config.error.data.method)\">{{vm.config.error.method || vm.config.error.data.method}}</div><div class=\"error-section text-body2 color-secondary-text layout-row layout-align-start-center\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{::vm.config.errorMessage | translate}}</div><div class=\"layout-row layout-align-start-center text-subhead1\" ng-if=\"vm.config.error.message || (vm.config.error.data && vm.config.error.data.message)\">{{vm.config.error.message || vm.config.error.data.message}}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent m0\" ng-click=\"vm.onOk()\">{{::vm.config.dismissButton | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('information/InformationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-information-dialog layout-column\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-header\"><h3>{{:: vm.config.title | translate }}</h3></div><div class=\"pip-body\"><div class=\"pip-content\">{{ vm.config.content }}</div></div><div class=\"pip-footer\"><div><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">{{ vm.config.ok | translate }}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsBigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog-big layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body pip-scroll\" ng-class=\"{\\'bp24\\': !vm.config.noActions}\"><div class=\"pip-header\" ng-class=\"{\\'header-hint\\': vm.config.noTitle && vm.config.hint}\"><h3 class=\"m0\" ng-if=\"!vm.config.noTitle\">{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.noTitle && vm.config.hint\" class=\"dialog-hint layout-row layout-align-start-center\"><div class=\"hint-icon-container flex-fixed\"><md-icon md-svg-icon=\"icons:info-circle-outline\"></md-icon></div><div>{{::vm.config.hint | translate}}</div></div></div><div class=\"content-divider\" ng-if=\"!noTitle\"></div><div class=\"pip-content\"><div class=\"spacer8\" ng-if=\"noTitle && hint\"></div><md-list class=\"pip-menu pip-ref-list\" pip-selected=\"vm.config.optionIndex\" index=\"{{vm.config.optionIndex }}\" pip-select=\"vm.onSelected($event)\"><md-list-item class=\"pip-ref-list-item pip-selectable layout-row layout-align-start-center\" ng-class=\"{\\'selected md-focused\\' : option.name == selectedOptionName, \\'divider-bottom\\': $index != options.length - 1}\" md-ink-ripple=\"\" ng-keyup=\"vm.onKeyUp($event, $index)\" ng-repeat=\"option in vm.config.options\"><div class=\"pip-content content-stretch\" ng-click=\"vm.onOptionSelect($event, option)\"><p class=\"pip-title spacer-right\" ng-if=\"option.title\" style=\"margin-bottom: 4px !important;\">{{::option.title | translate}}</p><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.subtitle\">{{::option.subtitle | translate}}</div><div class=\"pip-subtitle spacer-right\" style=\"height: inherit\" ng-if=\"option.text\" ng-bind-html=\"option.text | translate\"></div></div></md-list-item></md-list></div><div class=\"spacer8\" ng-if=\"vm.config.noActions\"></div></md-dialog-content><div class=\"pip-footer\" ng-if=\"!vm.config.noActions\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\" style=\"margin-right: -6px\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDialogs.Templates');\n} catch (e) {\n  module = angular.module('pipDialogs.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('options/OptionsDialog.html',\n    '<md-dialog class=\"pip-dialog pip-options-dialog layout-column\" min-width=\"400\" md-theme=\"{{vm.theme}}\"><md-dialog-content class=\"pip-body lp0 tp0 rp0 bp24 pip-scroll\"><div class=\"pip-header\"><h3>{{::vm.config.title | translate}}</h3><div ng-show=\"vm.config.deletedTitle\" class=\"header-option text-subhead1 divider-bottom\"><md-checkbox ng-model=\"deleted\" aria-label=\"CHECKBOX\">{{::vm.config.deletedTitle | translate}}</md-checkbox></div></div><div class=\"pip-content\"><md-radio-group ng-model=\"vm.config.selectedOptionName\" class=\"pip-list md-primary\" md-no-ink=\"true\" ng-keypress=\"vm.onKeyPress($event)\" tabindex=\"0\"><div ng-repeat=\"option in vm.config.options\" class=\"pip-list-item\" md-ink-ripple=\"\" ui-event=\"{ click: \\'vm.onOptionSelect($event, option)\\' }\" ng-class=\"{ selected: option.name == vm.config.selectedOptionName }\"><div class=\"pip-list-item item-padding\"><md-icon class=\"pip-option-icon\" md-svg-icon=\"icons:{{option.icon}}\" ng-if=\"option.icon\"></md-icon><div class=\"pip-option-title\">{{::option.title | translate}}</div><md-radio-button ng-value=\"option.name\" tabindex=\"-1\" aria-label=\"{{::option.title | translate}}\"></md-radio-button></div></div></md-radio-group></div></md-dialog-content><div class=\"pip-footer\"><div><md-button class=\"pip-cancel\" ng-click=\"vm.onCancel()\">{{::\\'CANCEL\\' | translate}}</md-button><md-button class=\"pip-submit md-accent\" ng-click=\"vm.onSelect()\">{{::vm.config.applyButtonTitle | translate}}</md-button></div></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dialogs-html.min.js.map\n"]}